(window.webpackJsonp=window.webpackJsonp||[]).push([[14,4,6],{785:function(n,a,s){"use strict";var t=s(811);a.a=t.b},795:function(n,a,s){"use strict";var t=s(728),e=s(0),p=s(2),o=s.n(p),c=s(800),l=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(t.b)(a,n),a.prototype.render=function(){var n=this,a=this.props,s=a.prefixCls,t=a.onClick,p=a.visible,l=o()(s+"-text",{"zent-select--visible":p});return e.createElement(c.a,{componentName:"Select"},function(a){return e.createElement("div",{className:l,onClick:t},n.props.text||e.createElement("span",{className:s+"-placeholder"},n.props.placeholder||a.input))})},a}(e.PureComponent);a.a=l},796:function(n,a,s){"use strict";var t=s(728),e=s(0),p=s(2),o=s.n(p),c=s(800),l=s(86),u=(s(401),s(729),s(730),s(732),function(n){function a(){var a=null!==n&&n.apply(this,arguments)||this;return a.state={value:""},a.inputRef=e.createRef(),a.inputChangeHandler=function(n){a.props.onChange({keyword:n.target.value})},a}return Object(t.b)(a,n),a.prototype.componentDidMount=function(){this.props.onChange({extraFilter:!0})},a.prototype.shouldComponentUpdate=function(n,a){return a.value!==this.state.value},a.prototype.componentWillReceiveProps=function(n){this.setState({value:null===n.keyword?n.value:n.keyword})},a.prototype.render=function(){var n=this,a=this.props,s=a.prefixCls,t=a.placeholder,p=a.keyword,u=a.text,i=a.visible,r=o()(s+"-input",{"zent-select--visible":i});return e.createElement(c.a,{componentName:"Select"},function(a){return e.createElement(l.Input,{ref:n.inputRef,className:r,placeholder:t||a.input,type:"text",value:null===p?u:p,onChange:n.inputChangeHandler,onClick:n.props.onClick})})},a}(e.Component));a.a=u},797:function(n,a,s){"use strict";var t=s(728),e=s(0),p=function(n){function a(a){var s=n.call(this,a)||this;return s.optionClickHandler=s.optionClickHandler.bind(s),s}return Object(t.b)(a,n),a.prototype.optionClickHandler=function(n){var a,s;null===(s=(a=this.props).onClick)||void 0===s||s.call(a,n,this.props.cid)},a.prototype.render=function(){var n=this.props,a=n.className,s=n.text;return e.createElement("span",{className:a,onClick:this.optionClickHandler,onMouseEnter:this.props.onMouseEnter},s)},a}(e.PureComponent);a.a=p},798:function(n,a,s){"use strict";var t=s(728),e=s(0),p=s(2),o=s.n(p),c=s(18),l=s(800),u=s(191),i=(s(401),s(729),function(n){function a(a){var s=n.call(this,a)||this;return s.deleteTagHandler=s.deleteTagHandler.bind(s),s}return Object(t.b)(a,n),a.prototype.deleteTagHandler=function(n){n.preventDefault(),n.stopPropagation(),this.props.onDelete(this.props.cid)},a.prototype.render=function(){var n=this.props,a=n.prefixCls,s=n.text;return e.createElement("span",null,s?e.createElement("span",{className:a+"-tag"},s,e.createElement(u.a,{type:"close",className:a+"-delete",onClick:this.deleteTagHandler})):"")},a}(e.PureComponent)),r=function(n){function a(a){var s=n.call(this,a)||this;return s.deleteTagHandler=s.deleteTagHandler.bind(s),s}return Object(t.b)(a,n),a.prototype.componentWillReceiveProps=function(n){var a=this.props.selectedItems,s=n.cid,t=n.text,e=n.value;if(this.isDelete||this.isAdded)return this.isDelete=!1,void(this.isAdded=!1);var p=a.filter(function(n){return n.cid===s}).length>0;void 0===s||p?p&&(this.isAdded=!0,this.props.onChange({selectedItem:{value:""}})):(a.push({cid:s,text:t,value:e}),this.props.onChange({selectedItems:a,selectedItem:{value:""},open:!1}))},a.prototype.deleteTagHandler=function(n){var a=this.props,s=a.selectedItems;if(!a.disabled){var t=s.filter(function(a){return a.cid===n})[0];this.isDelete=!0,this.props.onDelete(t),this.props.onChange({selectedItems:s.filter(function(a){return a.cid!==n}),selectedItem:{},open:!1})}},a.prototype.render=function(){var n=this,a=this.props,s=a.prefixCls,p=a.placeholder,c=a.onClick,u=a.selectedItems,r=a.visible,k=o()(s+"-tags",{"zent-select-tags__empty":!u.length,"zent-select--visible":r});return e.createElement(l.a,{componentName:"Select"},function(a){return e.createElement("div",{className:k,onClick:c},u.length>0?u.map(function(a,s){return e.createElement(i,Object(t.a)({},n.props,{key:s,cid:a.cid},a,{onDelete:n.deleteTagHandler}))}):e.createElement("span",{className:s+"-placeholder"},p||a.input))})},a.defaultProps={selectedItems:[],onDelete:c.a},a}(e.PureComponent);a.a=r},803:function(n,a,s){"use strict";var t=s(735),e=s(728),p=s(0),o=s(2),c=s.n(o),l=s(733),u=function(n){function a(){var a=null!==n&&n.apply(this,arguments)||this;return a.onKeyDown=function(n){"INPUT"===n.target.tagName&&a.props.disableEnterSubmit&&"Enter"===n.key&&n.preventDefault()},a}return Object(e.b)(a,n),a.prototype.render=function(){var n,a=this.props,s=a.prefix,t=a.className,e=a.style,o=a.horizontal,l=a.inline,u=a.onSubmit,i=c()(((n={})[s+"-form"]=!0,n[s+"-form--horizontal"]=o,n[s+"-form--inline"]=l,n[s+"-form--vertical"]=!o&&!l,n[t]=!!t,n));return p.createElement("form",{className:i,style:e,onSubmit:u,onKeyDown:this.onKeyDown},this.props.children)},a.defaultProps={prefix:"zent",onSubmit:l.a,disableEnterSubmit:!0},a}(p.PureComponent),i=s(731),r=s(759),k=s(739),d=s(758),m=s(300),h=s(760),f=s(298),g=s(38),y=s(306),v=s(743),b=s(189),F=s(17),w=s(297),x=function(n){var a=[];if(n)for(var s=0;s<n.length;s++){var t=n[s];t.selected&&a.push(t.value)}return a},E=function(n){return!!(n&&n.stopPropagation&&n.preventDefault)};function C(n,a){if(arguments.length>=2)return a;if(E(n)){var s=n.target,t=s.type,e=s.value,p=s.checked,o=s.files,c=n.dataTransfer;return"checkbox"===t?p:"file"===t?o||c&&c.files:"select-multiple"===t?x(n.target.options):""===e||"number"!==t&&"range"!==t?e:parseFloat(e)}return n&&void 0!==n.value?n.value:n}function j(n,a){return a&&Object(y.a)(a)?Object(t.a)({},a,n):n}function q(n){var a=E(n);return a&&n.preventDefault(),a}function S(n,a){var s=n.prefix;return s?/^\[\d+\]/.test(a)?""+s+a:s+"."+a:a}function z(n){var a=Object(F.findDOMNode)(n);if(a&&a.nodeType===Node.ELEMENT_NODE&&Object(b.a)(a.getBoundingClientRect)){var s=a.getBoundingClientRect(),t=s.top+window.pageYOffset,e=s.left+window.pageXOffset;Object(w.a)(document.body,e,t)}}function O(n){for(var a=0;a<n.length;a++){var s=n[a];if(!s.isValid()){var t=s.getWrappedComponent(),e=void 0;if(e=t&&Object(b.a)(t.getControlInstance)?t.getControlInstance():t)return z(e),!0}}return!1}function T(n,a,s){var t=Object(m.a)(s,"removeIfNotExists",!1);n.forEach(function(n){var e=n.getName(),p=Object(m.a)(a,e);void 0!==p?n.replaceAllFields(p):t&&n.removeAllFields(),n.setMutatorAction(Object(m.a)(s,"mutatorAction",2))})}function N(n){return Object(v.a)(n,"_fieldInternalValue")&&Object(v.a)(n,"_fieldInternalKey")}function A(n){for(;N(n);)n=Object(m.a)(n,"_fieldInternalValue");return n}function D(n){return null!=n}function I(n){return""===n}var V={required:function(n,a){return D(a)&&!I(a)},isExisty:function(n,a){return D(a)},matchRegex:function(n,a,s){return!D(a)||I(a)||s.test(a)},isUndefined:function(n,a){return void 0===a},isEmptyString:function(n,a){return I(a)},isEmail:function(n,a){return V.matchRegex(n,a,/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i)},isUrl:function(n,a){return V.matchRegex(n,a,/^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,=]|:|@)|\/|\?)*)?$/i)},isTrue:function(n,a){return!0===a},isFalse:function(n,a){return!1===a},isNumeric:function(n,a){return"number"==typeof a||V.matchRegex(n,a,/^[-+]?(?:\d*[.])?\d+$/)},isInt:function(n,a){return V.matchRegex(n,a,/^(?:[-+]?(?:0|[1-9]\d*))$/)},isFloat:function(n,a){return V.matchRegex(n,a,/^(?:[-+]?(?:\d+))?(?:\.\d*)?(?:[eE][\+\-]?(?:\d+))?$/)},isLength:function(n,a,s){return!D(a)||I(a)||a.length===s},equals:function(n,a,s){return!D(a)||I(a)||a===s},equalsField:function(n,a,s){return a===Object(m.a)(n,s)},maxLength:function(n,a,s){return!D(a)||a.length<=s},minLength:function(n,a,s){return!D(a)||I(a)||a.length>=s}},P=V,_=function(n){function a(a){var s=n.call(this,"Submit Validation Failed")||this;return s.name="SubmissionError",s.errors=a,s}return Object(e.b)(a,n),a}(s(753).a);var R=_,B=function(n,a){var s,t=a.props,e=a.getFormValues(),p=t.onSubmitSuccess,o=t.onSubmitFail,c=t.scrollToError;a.setFormDirty(!0);var l=function(n){a.updateFormSubmitStatus(!1),o&&o(n)},u=function(n){a.updateFormSubmitStatus(!0),p&&p(n)};if(a.isValidating())return l(new R("Submit abort: validating"));var i=function(n){if(l(n),!(n instanceof _||o))throw n;return n},r=function(){var s;try{s=n(e,a)}catch(n){return i(n)}return Object(f.a)(s)?(a.setState({isSubmitting:!0}),s.then(function(n){return a.setState({isSubmitting:!1}),u(n),n},function(n){return a.setState({isSubmitting:!1}),i(n)})):(u(s),s)},k=function(){if(a.isValid()){if(a.isFormAsyncValidated())return r();a.asyncValidateForm(function(){return r()},function(n){o&&l(new R(n))})}else s=a.getValidationErrors(),c&&O(a.fields),o&&l(new R(s))};a.fields.every(function(n){return n.props.validateOnChange||n.props.validateOnBlur})?k():a.validateForm(!0,k)},M=p.createContext({zentForm:{}}),U=M.Provider,W=[],L=function(n){if(!n||"function"!=typeof n)throw new Error("You must either pass handleSubmit() an onSubmit function or pass onSubmit as a prop");return n},H=function(n){void 0===n&&(n={});var a=n.formValidations,s=n.onChange,o=n.onSubmitSuccess,c=n.onSubmitFail,u=n.scrollToError,y=Object(t.a)({},P,a);return function(n){var a,t;return(a=function(a){function s(n){var s=a.call(this,n)||this;return s.getFormProp=Object(g.a)(function(){return{getFormValues:s.getFormValues,getFieldError:s.getFieldError,setFieldExternalErrors:s.setFieldExternalErrors,resetFieldsValue:s.resetFieldsValue,setFieldsValue:s.setFieldsValue,setFormDirty:s.setFormDirty,setFormPristine:s.setFormPristine,initialize:s.initialize,isFieldDirty:s.isFieldDirty,isFieldTouched:s.isFieldDirty,isFieldValidating:s.isFieldValidating,isValid:s.isValid,isValidating:s.isValidating,isSubmitting:s.isSubmitting,isFormAsyncValidated:s.isFormAsyncValidated,validateForm:s.validateForm,asyncValidateForm:s.asyncValidateForm,isFormSubmitFail:s.isFormSubmitFail,isFormSubmitSuccess:s.isFormSubmitSuccess,updateFormSubmitStatus:s.updateFormSubmitStatus}}),s.getFormContext=Object(g.a)(function(){return{zentForm:{attachToForm:s.attachToForm,detachFromForm:s.detachFromForm,validate:s.validate,asyncValidate:s.asyncValidate,getFormValues:s.getFormValues,getFieldError:s.getFieldError,isValidValue:s.isValidValue,setFieldExternalErrors:s.setFieldExternalErrors,resetFieldsValue:s.resetFieldsValue,setFormDirty:s.setFormDirty,setFormPristine:s.setFormPristine,setFieldArrayMembers:s.setFieldArrayMembers,isValid:s.isValid,isSubmitting:s.isSubmitting,validateForm:s.validateForm,asyncValidateForm:s.asyncValidateForm,isFormSubmitFail:s.isFormSubmitFail,isFormSubmitSuccess:s.isFormSubmitSuccess,updateFormSubmitStatus:s.updateFormSubmitStatus}}}),s.submitCompleted=function(n){return delete s.submitPromise,s.updateFormSubmitStatus(!1),n},s.submitFailed=function(n){throw delete s.submitPromise,s.updateFormSubmitStatus(!0),n},s.listenToSubmit=function(n){return Object(f.a)(n)?(s.submitPromise=n,n.then(s.submitCompleted,s.submitFailed)):n},s.submit=function(n){var a,t=s.props.onSubmit;return n&&!q(n)?(a=function(){return!s.submitPromise&&s.listenToSubmit(B(L(n),s))},function(n){for(var s=[],t=1;t<arguments.length;t++)s[t-1]=arguments[t];q(n)?a.apply(void 0,s):a.apply(void 0,Object(e.d)([n],s))}):s.submitPromise?void 0:s.listenToSubmit(B(L(t),s))},s.isSubmitting=function(){return s.state.isSubmitting},s.isValid=function(){return s.state.isFormValid},s.setFieldValidationErrors=function(n,a){void 0===a&&(a=!0),s.fields.forEach(function(s){var t=s.getName(),e={_isValid:!(t in n),_validationError:"string"==typeof n[t]?[n[t]]:n[t]};a&&(e._isDirty=!0),s.setState(e)})},s.setFieldExternalErrors=function(n,a){void 0===a&&(a=!0),n&&(s.fields.forEach(function(s){var t=s.getName();if(n.hasOwnProperty(t)){var e=Object(m.a)(n,t),p={_isValid:!1,_externalError:"string"==typeof e?[e]:e};a&&(p._isDirty=!0),s.setState(p)}}),s.props.scrollToError&&O(s.fields))},s.setFormDirty=function(n){void 0===n&&(n=!0),s.fields.forEach(function(a){a.setState({_isDirty:n})})},s.setFormPristine=function(n){void 0===n&&(n=!1),s.fields.forEach(function(a){a.setState({_isDirty:!n})})},s.initialize=function(n){T(s.fieldArrays,n,{removeIfNotExists:!0,mutatorAction:1}),s.fields.forEach(function(a){var s=a.getName(),t=Object(m.a)(n,s);a.setInitialValue(t)})},s.resetFieldsValue=function(n){T(s.fieldArrays,n,{removeIfNotExists:!0,mutatorAction:3}),s.fields.forEach(function(a){var s=a.getName(),t=Object(m.a)(n,s);a.resetValue(t)})},s.setFieldsValue=function(n){T(s.fieldArrays,n,{removeIfNotExists:!1,mutatorAction:2}),s.fields.forEach(function(a){var s=a.getName(),t=Object(m.a)(n,s);void 0!==t&&a.setValue(t)})},s.setFieldArrayMembers=function(n,a){var t,e=[];s.fieldArrays.forEach(function(a){var s=a.getName();s===n?t=a:Object(h.a)(s,n)&&e.push(a)}),e.sort(),e.forEach(function(s){var e=s.getName().substring(n.length),p=Object(m.a)(a,e);void 0!==p?s.replaceAllFields(p):s.removeAllFields(),s.setMutatorAction(t.getMutatorAction())}),t&&s.fields.forEach(function(s){var e=s.getName();if(e!==n&&Object(h.a)(e,n)){var p=e.substring(n.length),o=Object(m.a)(a,p),c=t.getMutatorAction();1===c?s.setInitialValue(o):2===c||0===c?void 0!==o&&s.setValue(o):3===c&&s.resetValue(o)}})},s.reset=function(n){s.setFormDirty(!1),s.resetFieldsValue(n)},s.isFieldDirty=function(n){var a=Object(r.a)(s.fields,function(a){return a.getName()===n});return!!a&&a.isDirty()},s.isFieldValidating=function(n){var a=Object(r.a)(s.fields,function(a){return a.getName()===n});return!!a&&a.isValidating()},s.getFieldError=function(n){var a=Object(r.a)(s.fields,function(a){return a.getName()===n});return a?a.getErrorMessage():""},s.getFormValues=function(){return s.fields.reduce(function(n,a){var s=a.getName(),t=a.getValue();return function n(a,s,t){if(0!==s.length){var e=s[0];if(/\[\d+\]/.test(e)){var p=e.match(/\d+(?=\])/)[0];a[e=e.replace(/\[\d+\]/,"")]||(a[e]=[]),s.length>1?(a[e][p]||(a[e][p]={}),n(a[e][p],s.slice(1),t)):a[e][p]=t}else a[e]||(a[e]={}),s.length>1?n(a[e],s.slice(1),t):a[e]=t}}(n,s.split("."),t),n},{})},s.getValidationErrors=function(){return s.fields.reduce(function(n,a){return n[a.getName()]=a.getErrorMessage(),n},{})},s.getInitialValues=function(){return s.fields.reduce(function(n,a){return n[a.getName()]=a.getInitialValue(),n},{})},s.isChanged=function(){return!Object(k.a)(s.getInitialValues(),s.getFormValues())},s.isValidating=function(){return Object(d.a)(s.fields,function(n){return n.isValidating()})},s.isValidValue=function(n,a){return s.runValidation(n,a).isValid},s.updateFormSubmitStatus=function(n){s.setState({submitFail:!n,submitSuccess:n})},s.isFormSubmitFail=function(){return s.state.submitFail},s.isFormSubmitSuccess=function(){return s.state.submitSuccess},s.runValidation=function(n,a){void 0===a&&(a=n.getValue());var t=s.props.validationErrors,e=n.props,p=e.name,o=e.validationError,c=e.validationErrors,l=s.getFormValues(),u=s.runRules(a,l,n._validations),i=!(u.failed.length||t&&t[n.getName()]);return{isValid:i,error:i?W:u.errors.length?u.errors:t&&t[p]?"string"==typeof t[p]?[t[p]]:t[p]:u.failed.length?u.failed.map(function(n){return c[n]?c[n]:o}).filter(function(n,a,s){return s.indexOf(n)===a}):W}},s.runRules=function(n,a,s){void 0===s&&(s=[]);var t={errors:[],failed:[]};function e(n,a){"string"==typeof n?(t.errors.push(n),t.failed.push(a)):n||t.failed.push(a)}return Object.keys(s).forEach(function(t){if(!y[t]&&"function"!=typeof s[t])throw new Error("does not have the validation rule: "+t);"function"==typeof s[t]?e(s[t](a,n),t):e(y[t](a,n,s[t]),t)}),t},s.validate=function(n){s._isMounted&&s.props.onChange(s.getFormValues(),s.isChanged());var a=s.runValidation(n);n.setState({_isValid:a.isValid,_validationError:a.error,_externalError:null},function(){return s.validateForm(!1,null,n.props.relatedFields)})},s.asyncValidate=function(n,a){var t=n.props.asyncValidation,e=s.getFormValues();if(!t||n.state._validationError.length)return Promise.resolve();n.setState({_isValidating:!0});var p=t(e,a);if(!Object(f.a)(p))throw new Error("asyncValidation function must return a promise");var o=function(a){return function(t){if(n.setState({_isValidating:!1,_isValid:!a&&0===n.state._validationError.length,_externalError:a&&t?[t]:null,_asyncValidated:!0}),a)throw s.setState({isFormValid:!1}),new Error(t)}};return p.then(o(!1),o(!0))},s.isFormAsyncValidated=function(){return s.fields.every(function(n){return n.isAsyncValidated()||!n.props.asyncValidation})},s.asyncValidateForm=function(n,a){var t=(s.fields||[]).map(function(n){return s.asyncValidate(n,n.getValue())});Promise.all(t).then(function(){n&&n()}).catch(function(n){a&&a(n)})},s.validateForm=function(n,a,t){void 0===n&&(n=!1);var e=function(n){if(n===s.fields.length-1){var t=s.fields.every(function(n){return n.isValid()});s.setState({isFormValid:t},a),t?s.props.onValid():s.props.onInvalid()}};s.fields.forEach(function(a,p){if(n||a.props.validateOnBlur)if(void 0===t||t&&t.indexOf(a.getName())>=0){var o=a.state._externalError,c=s.runValidation(a);c.isValid&&o&&(c.isValid=!1),a.setState({_isValid:c.isValid,_validationError:c.error,_externalError:!c.isValid&&o?o:null},function(){return e(p)})}else e(p);else e(p)})},s.attachToForm=function(n,a){Object(m.a)(a,"isFieldContainer",!1)?s.fieldArrays.push(n):(s.fields.indexOf(n)<0&&s.fields.push(n),s._isMounted&&s.validate(n))},s.detachFromForm=function(n,a){if(Object(m.a)(a,"isFieldContainer",!1)){var t=s.fieldArrays.indexOf(n);-1!==t&&s.fieldArrays.splice(t,1)}else{var e=s.fields.indexOf(n);e>=0&&s.fields.splice(e,1),s.validateForm()}},s.getWrappedForm=function(){return s.wrappedForm},s.saveWrappedFormRef=function(n){s.wrappedForm=n},s.state={isFormValid:!0,isSubmitting:!1,submitFail:!1,submitSuccess:!1},s.fields=[],s.fieldArrays=[],s._isMounted=!1,s}return Object(e.b)(s,a),s.prototype.componentDidMount=function(){this.validateForm(),this._isMounted=!0},s.prototype.componentWillUpdate=function(){this.prevFieldNames=this.fields.map(function(n){return n.getName()})},s.prototype.componentDidUpdate=function(){var n=this.props.validationErrors;n&&"object"==typeof n&&Object.keys(n).length>0&&this.setFieldValidationErrors(n);var a=this.fields.map(function(n){return n.getName()});Object(k.a)(this.prevFieldNames,a)||this.validateForm()},s.prototype.render=function(){var a=Object(i.a)(this.props,["validationErrors","handleSubmit","onChange"]);return p.createElement(U,{value:this.getFormContext()},p.createElement(n,Object(e.a)({},a,{ref:this.saveWrappedFormRef,handleSubmit:this.submit,zentForm:this.getFormProp()})))},s}(p.Component)).displayName="Form("+((t=n).displayName||t.name||"Component")+")",a.WrappedForm=n,a.defaultProps={onSubmit:l.a,onSubmitSuccess:o||l.a,onSubmitFail:c||l.a,onValid:l.a,onInvalid:l.a,onChange:s||l.a,validationErrors:null,scrollToError:u||!1},a}},G=["isDirty","isTouched","isPristine","isValid","isActive","isAsyncValidated","error","errors","validationError","validationErrors","validations","validateOnChange","validateOnBlur","clearErrorOnFocus","asyncValidation","normalize","format","fields","relatedFields","submitFailed","submitSuccess"],Y=function(n){function a(a,s){var p=n.call(this,a,s)||this;if(p.isDirty=function(){return p.state._isDirty},p.isValid=function(){return p.state._isValid},p.isValidating=function(){return p.state._isValidating},p.isActive=function(){return p.state._active},p.getInitialValue=function(){return p.state._initialValue},p.getValue=function(){return p.state._value},p.getName=function(){return p._name},p.isAsyncValidated=function(){return p.state._asyncValidated},p.setValue=function(n,a){void 0===a&&(a=!0),p.setState(function(){return{_value:n,_isDirty:!0}},function(){a&&p.context.zentForm.validate(p)})},p.resetValue=function(n){p.setState(function(a){return{_value:void 0!==n?n:a._initialValue,_isDirty:!1}},function(){p.context.zentForm.validate(p)})},p.setInitialValue=function(n){var a=void 0!==n?n:p.state._initialValue;p.setState({_value:a,_initialValue:a,_isDirty:!1},function(){p.context.zentForm.validate(p)})},p.getWrappedComponent=function(){return p.wrappedComponent},p.getErrorMessage=function(){var n=p.getErrorMessages();return n.length?n[0]:null},p.getErrorMessages=function(){var n=p.state,a=n._externalError,s=n._validationError;return p.isValid()?[]:a||s||[]},p.normalize=function(n){var a,s=p.props.normalize;if(!s)return n;var t=p.context.zentForm.getFormValues();return s(n,p.getValue(),Object(e.a)(Object(e.a)({},t),((a={})[p.getName()]=n,a)),t)},p.format=function(n){var a=p.props.format;return a?a(n):n},p.handleChange=function(n,a){void 0===a&&(a={merge:!1});var s=p.props,t=s.onChange,e=s.validateOnChange,o=p.getValue(),c=Object(v.a)(a,"value")?C(n,a.value):C(n),l=a.merge?j(c,o):c,u=p.normalize(l),i=!1;t&&t(n,u,o,function(){return i=!0}),i||(p.setValue(u,e),p.context.zentForm.onChangeFieldArray&&p.context.zentForm.onChangeFieldArray(p._name,u))},p.handleFocus=function(n){var a=p.props,s=a.onFocus,e=a.clearErrorOnFocus,o={_active:!0};s&&s(n),e&&Object(t.a)(o,{_isValid:!0,_validationError:[],_externalError:null}),p.setState(o)},p.handleBlur=function(n,a){void 0===a&&(a={merge:!1});var s=p.props,t=s.onBlur,e=s.asyncValidation,o=s.validateOnBlur,c=p.getValue(),l=Object(v.a)(a,"value")?C(n,a.value):C(n),u=a.merge?j(l,c):l,i=p.normalize(u),r=!1;t&&t(n,i,c,function(){return r=!0}),p.setState({_active:!1}),r||(p.setValue(i,o),e&&p.context.zentForm.asyncValidate(p,i).catch(function(n){console.error(n)}))},p.processProps=function(n){var a=n.type,s=n.value,t=Object(e.c)(n,["type","value"]);return"checkbox"===a?Object(e.a)(Object(e.a)({},t),{checked:!!s,type:a}):"file"===a?Object(e.a)(Object(e.a)({},t),{type:a}):n},!s.zentForm)throw new Error("Field must be in zent-form");return p.state={_value:a.value,_isValid:!0,_isDirty:!1,_isValidating:!1,_active:!1,_initialValue:a.value,_validationError:[],_externalError:null,_asyncValidated:!1},p._name=S(s.zentForm,a.name),p._validations=a.validations||{},p}return Object(e.b)(a,n),a.prototype.shouldComponentUpdate=function(n,a){return!Object(k.a)(a,this.state)||!Object(k.a)(n,this.props)},a.prototype.componentWillMount=function(){if(!this.props.name)throw new Error("Form Field requires a name property when used");var n=this.context.zentForm;n.attachToForm(this),this._name=S(n,this.props.name)},a.prototype.componentWillReceiveProps=function(n){"validations"in n&&(this._validations=n.validations),this._name=S(this.context.zentForm,n.name)},a.prototype.componentDidUpdate=function(n){Object(k.a)(this.props.value,n.value)||this.setValue(this.props.value,this.props.validateOnBlur)},a.prototype.componentWillUnmount=function(){this.context.zentForm.detachFromForm(this)},a.prototype.render=function(){var n=this,a=this.props,s=a.component,t=Object(e.c)(a,["component"]),o=this.processProps(Object(e.a)(Object(e.a)({},t),{ref:function(a){n.wrappedComponent=a},name:this.getName(),isTouched:this.isDirty(),isDirty:this.isDirty(),isValid:this.isValid(),isAsyncValidated:this.isAsyncValidated,isActive:this.isActive(),value:this.format(this.getValue()),error:this.getErrorMessage(),errors:this.getErrorMessages(),onChange:this.handleChange,onBlur:this.handleBlur,onFocus:this.handleFocus}));return"string"==typeof s?Object(p.createElement)(s,Object(e.a)({},Object(i.a)(o,G))):Object(p.createElement)(s,o)},a.defaultProps={value:"",validationError:"",validationErrors:{},validateOnBlur:!0,validateOnChange:!0,clearErrorOnFocus:!0},a.contextType=M,a}(p.Component),$=s(761),J=s(754);function Z(n,a,s,t){var e="["+t+"]";return n(e,t,e+"-"+s._fieldInternalKey,a[t],a)}var K=function(n){function a(a,s){var p=n.call(this,a,s)||this;if(p.getFormContext=Object(g.a)(function(n){var a=p.context.zentForm;return{zentForm:Object(e.a)(Object(e.a)({},a),{prefix:n,onChangeFieldArray:p.onChangeFieldArray})}}),p.onChangeFieldArray=function(n,a){var s=Object(t.a)([],p.state.fieldArray),e=n.replace(p._name,"");e=e.indexOf(".")>=0?e.replace(/\./,"._fieldInternalValue."):e+"._fieldInternalValue",Object($.a)(s,e,a),p.context.zentForm.onChangeFieldArray&&p.context.zentForm.onChangeFieldArray(p._name,s)},p.getWrappedComponent=function(){return p.wrappedComponent},p.saveWrappedComponent=function(n){p.wrappedComponent=n},p.getField=function(n){if(n>=p.state.fieldArray.length)throw Error("The index for getField is invalid");return p.getFieldArrayValues()[n]},p.getAllFields=function(){return p.getFieldArrayValues()},p.forEachFields=function(n){var a=p.state.fieldArray,s=p.getFieldArrayValues();a.forEach(function(a,t){return Z(n,s,a,t)})},p.mapFields=function(n){var a=p.state.fieldArray,s=p.getFieldArrayValues();return(a||[]).map(function(a,t){return Z(n,s,a,t)})},p.moveFields=function(n,a){p.setState(function(s){var e=Object(t.a)([],s.fieldArray),o=e.length;if(n>=o||a>=o)throw Error("The index for moveFields is invalid");var c=e.splice(n,1)[0];return e.splice(a,0,c),p.guardFieldArrayChange(e),{fieldArray:e}})},p.popFields=function(){p.setState(function(n){var a=Object(t.a)([],n.fieldArray);return a.pop(),p.guardFieldArrayChange(a),{fieldArray:a}})},p.pushFields=function(n){p.setState(function(a){var s=Object(t.a)([],a.fieldArray);return s.push(p.createInternalFieldValue(n)),p.guardFieldArrayChange(s),{fieldArray:s}})},p.removeFields=function(n){p.setState(function(a){var s=Object(t.a)([],a.fieldArray);if(n>=s.length)throw Error("The index for removeFields is invalid");return s.splice(n,1),p.guardFieldArrayChange(s),{fieldArray:s}})},p.removeAllFields=function(){p.setState(function(){var n=[];return p.guardFieldArrayChange(n),{fieldArray:n}})},p.shiftFields=function(){p.setState(function(n){var a=Object(t.a)([],n.fieldArray);return a.shift(),p.guardFieldArrayChange(a),{fieldArray:a}})},p.swapFields=function(n,a){p.setState(function(s){var e=Object(t.a)([],s.fieldArray),o=e.length;if(n>=o||a>=o)throw Error("The index to swap in invalid");var c=Object(t.a)({},e[n]);return e[n]=e[a],e[a]=c,p.guardFieldArrayChange(e),{fieldArray:e}})},p.unshiftFields=function(n){p.setState(function(a){var s=Object(t.a)([],a.fieldArray);return s.unshift(p.createInternalFieldValue(n)),p.guardFieldArrayChange(s),{fieldArray:s}})},p.concatFields=function(n){p.setState(function(a){var s=Object(t.a)([],a.fieldArray);return Array.isArray(n)||(n=[n]),s=s.concat(n.map(p.createInternalFieldValue)),p.guardFieldArrayChange(s),{fieldArray:s}})},p.replaceAllFields=function(n){p.setState(function(){Array.isArray(n)||(n=[n]);var a=n.map(p.createInternalFieldValue);return p.guardFieldArrayChange(a),{fieldArray:a}})},p.createInternalFieldValue=function(n){return{_fieldInternalValue:n,_fieldInternalKey:p._uniqueKey++}},p.getFieldOperations=Object(g.a)(function(n,a){return{name:n,length:a.length,forEach:p.forEachFields,get:p.getField,getAll:p.getAllFields,map:p.mapFields,move:p.moveFields,pop:p.popFields,push:p.pushFields,remove:p.removeFields,removeAll:p.removeAllFields,shift:p.shiftFields,swap:p.swapFields,unshift:p.unshiftFields,concat:p.concatFields,replaceAll:p.replaceAllFields}}),!s.zentForm)throw new Error("FieldArray must be in zent-form");return p._uniqueKey=0,p._name=S(s.zentForm,a.name),p._mutatorAction=1,p.state={fieldArray:(a.value||[]).map(p.createInternalFieldValue)},p}return Object(e.b)(a,n),a.prototype.shouldComponentUpdate=function(n,a){return!Object(k.a)(a,this.state)||!Object(k.a)(n,this.props)},a.prototype.componentWillMount=function(){if(!this.props.name)throw new Error("FieldArray requires a name property when used")},a.prototype.componentWillReceiveProps=function(n){"name"in n&&(this._name=S(this.context.zentForm,n.name)),n.value!==this.props.value&&this.setState(n.value.map(this.createInternalFieldValue))},a.prototype.componentDidMount=function(){this.context.zentForm.attachToForm(this,{isFieldContainer:!0}),Object(J.a)(this.state.fieldArray)||(this.context.zentForm.setFieldArrayMembers(this._name,this.getFieldArrayValues()),this.setMutatorAction(0))},a.prototype.componentDidUpdate=function(n,a){a.fieldArray!==this.state.fieldArray&&(this.context.zentForm.setFieldArrayMembers(this._name,this.getFieldArrayValues()),this.setMutatorAction(0))},a.prototype.guardFieldArrayChange=function(n){this.context.zentForm.onChangeFieldArray&&this.context.zentForm.onChangeFieldArray(this._name,n)},a.prototype.getName=function(){return this._name},a.prototype.setMutatorAction=function(n){void 0===n&&(n=0),this._mutatorAction=n},a.prototype.getMutatorAction=function(){return this._mutatorAction},a.prototype.getFieldArrayValues=function(){return(this.state.fieldArray||[]).map(A)},a.prototype.componentWillUnmount=function(){this.context.zentForm.detachFromForm(this,{isFieldContainer:!0})},a.prototype.render=function(){var n=this.props,a=n.component,s=Object(e.c)(n,["component"]),t=Object(e.a)(Object(e.a)({},s),{ref:this.saveWrappedComponent,fields:this.getFieldOperations(this._name,this.state.fieldArray)});return"string"==typeof a&&(t=Object(i.a)(t,G)),p.createElement(M.Provider,{value:this.getFormContext(this._name)},p.createElement(a,Object(e.a)({},t)))},a.contextType=M,a}(p.Component),Q=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props,a=n.legend,s=n.children;return p.createElement("fieldset",{className:"zent-form__fieldset"},p.createElement("legend",{className:"zent-form__legend"},a),s)},a}(p.PureComponent),X=function(n){function a(a,s){var t=n.call(this,a,s)||this;if(t.getFormContext=Object(g.a)(function(n){var a=t.context.zentForm;return{zentForm:Object(e.a)(Object(e.a)({},a),{prefix:S(a,n)})}}),!s.zentForm)throw new Error("FormSection must be in zent-form");return t}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props,a=n.component,s=Object(e.c)(n,["component"]);return p.createElement(M.Provider,{value:this.getFormContext(this.props.name)},p.createElement(a,Object(e.a)({},s)))},a.defaultProps={component:"div"},a.contextType=M,a}(p.PureComponent),nn=function(n){return function(a){function s(){var n=null!==a&&a.apply(this,arguments)||this;return n.getControlInstance=function(){return n.control},n}return Object(e.b)(s,a),s.prototype.render=function(){var a,s,t=this,o=this.props,l=o.required,u=void 0!==l&&l,i=o.helpDesc,r=void 0===i?"":i,k=o.notice,d=void 0===k?"":k,m=o.label,h=void 0===m?"":m,f=o.className,g=void 0===f?"":f,y=o.displayError,v=Object(e.c)(o,["required","helpDesc","notice","label","className","displayError"]),b=void 0===y?v.isDirty&&null!==v.error:y,F=c()(((a={"zent-form__control-group":!0,"zent-form__control-group--active":v.isActive,"has-error":b})[g]=!0,a)),w="function"!=typeof(s=n)||s.prototype&&s.prototype.isReactComponent?{ref:function(n){t.control=n}}:{};return p.createElement("div",{className:F},p.createElement("label",{className:"zent-form__control-label"},u?p.createElement("em",{className:"zent-form__required"},"*"):null,h),p.createElement("div",{className:"zent-form__controls"},p.createElement(n,Object(e.a)({},v,w)),b&&p.createElement("p",{className:"zent-form__error-desc"},v.error),d&&p.createElement("p",{className:"zent-form__notice-desc"},d),r&&p.createElement("p",{className:"zent-form__help-desc"},r)))},s}(p.PureComponent)},an=s(86),sn=(s(401),s(729),s(730),s(732),nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props,a=n.type,s=void 0===a?"text":a,t=Object(e.c)(n,["type"]),o=Object(i.a)(t,G);return p.createElement(an.Input,Object(e.a)({},o,{type:s}))},a}(p.Component))),tn=s(193),en=(s(737),nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=Object(i.a)(this.props,G);return p.createElement(tn.a,Object(e.a)({className:"zent-form__checkbox",checked:!0===this.props.value},n))},a}(p.Component))),pn=tn.a.Group,on=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=Object(i.a)(this.props,G);return p.createElement(pn,Object(e.a)({className:"zent-form__checkbox-group"},n))},a}(p.Component)),cn=s(772),ln=(s(744),cn.a.Group),un=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=Object(i.a)(this.props,G);return p.createElement(ln,Object(e.a)({className:"zent-form__radio-group"},n))},a}(p.Component)),rn=s(795),kn=s(785),dn=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props,a=n.trigger,s=void 0===a?rn.a:a,t=Object(e.c)(n,["trigger"]),o=Object(i.a)(t,G);return p.createElement(kn.a,Object(e.a)({},o,{onChange:function(n,a){t.onChange(a.value)},trigger:s}))},a}(p.Component)),mn=s(210),hn=(s(745),nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=Object(i.a)(this.props,G);return p.createElement(mn.a,Object(e.a)({},n))},a}(p.Component))),fn=s(388),gn=(s(755),nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=Object(i.a)(this.props,G);return p.createElement(fn.a,Object(e.a)({},n,{color:this.props.value}))},a}(p.Component))),yn=s(792),vn=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props.dateFormat,a=Object(i.a)(this.props,G,["dateFormat"]);return p.createElement(yn.a,Object(e.a)({},a,{format:n}))},a}(p.Component)),bn=s(819),Fn=nn(function(n){function a(){var a=null!==n&&n.apply(this,arguments)||this;return a.state={},a.onChange=function(n,s){a.setState({chosenDays:s}),a.props.onChange(n)},a}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props.dateFormat,a=this.state.chosenDays,s=Object(i.a)(this.props,G,["dateFormat"]);return p.createElement(bn.a,Object(e.a)({},s,{format:n,chooseDays:a,onChange:this.onChange}))},a}(p.Component)),wn=s(771),xn=(s(756),nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=Object(i.a)(this.props,G);return p.createElement(wn.a,Object(e.a)({},n,{size:"small",checked:this.props.value}))},a}(p.Component))),En=s(801),Cn=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props.dateFormat,a=Object(i.a)(this.props,G,["dateFormat"]);return p.createElement(En.a,Object(e.a)({},a,{format:n}))},a}(p.Component)),jn=s(806),qn=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props.dateFormat,a=Object(i.a)(this.props,G,["dateFormat"]);return p.createElement(jn.a,Object(e.a)({},a,{format:n}))},a}(p.Component)),Sn=s(804),zn=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props.dateFormat,a=Object(i.a)(this.props,G,["dateFormat"]);return p.createElement(Sn.a,Object(e.a)({},a,{format:n}))},a}(p.Component)),On=s(808),Tn=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props.dateFormat,a=Object(i.a)(this.props,G,["dateFormat"]);return p.createElement(On.a,Object(e.a)({},a,{format:n}))},a}(p.Component)),Nn=s(807),An=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props.dateFormat,a=Object(i.a)(this.props,G,["dateFormat"]);return p.createElement(Nn.a,Object(e.a)({},a,{format:n}))},a}(p.Component)),Dn=s(802),In=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props.timeFormat,a=Object(i.a)(this.props,G,["timeFormat"]);return p.createElement(Dn.a,Object(e.a)({},a,{format:n}))},a}(p.Component)),Vn=s(805),Pn=nn(function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){var n=this.props.timeFormat,a=Object(i.a)(this.props,G,["timeFormat"]);return p.createElement(Vn.a,Object(e.a)({},a,{format:n}))},a}(p.Component)),_n=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:en}))},a}(p.Component),Rn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:on}))},a}(p.Component),Bn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:gn}))},a}(p.Component),Mn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:Cn}))},a}(p.Component),Un=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:qn}))},a}(p.Component),Wn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:zn}))},a}(p.Component),Ln=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:Tn}))},a}(p.Component),Hn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:An}))},a}(p.Component),Gn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:In}))},a}(p.Component),Yn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:Pn}))},a}(p.Component),$n=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:vn}))},a}(p.Component),Jn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:Fn}))},a}(p.Component),Zn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:sn}))},a}(p.Component),Kn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:hn}))},a}(p.Component),Qn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:un}))},a}(p.Component),Xn=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:dn}))},a}(p.Component),na=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(e.b)(a,n),a.prototype.render=function(){return p.createElement(Y,Object(e.a)({},this.props,{component:xn}))},a}(p.Component);s.d(a,"a",function(){return aa});var aa=Object(t.a)(u,{Form:u,createForm:H,Field:Y,FieldArray:K,Fieldset:Q,FormSection:X,getControlGroup:nn,unknownProps:G,InputField:sn,CheckboxField:en,CheckboxGroupField:on,RadioGroupField:un,SelectField:dn,NumberInputField:hn,ColorPickerField:gn,DateRangePickerField:vn,DateRangeQuickPickerField:Fn,SwitchField:xn,SubmissionError:R,FormCheckboxField:_n,FormCheckboxGroupField:Rn,FormColorPickerField:Bn,FormDatePickerField:Mn,FormWeekPickerField:Un,FormMonthPickerField:Wn,FormQuarterPickerField:Ln,FormYearPickerField:Hn,FormTimePickerField:Gn,FormTimeRangePickerField:Yn,FormDateRangePickerField:$n,FormDateRangeQuickPickerField:Jn,FormInputField:Zn,FormNumberInputField:Kn,FormRadioGroupField:Qn,FormSelectField:Xn,FormSwitchField:na})},811:function(n,a,s){"use strict";var t=s(728),e=s(0),p=s(2),o=s.n(p),c=s(164),l=s(254),u=s(18),i=s(252),r=(s(401),s(730),s(781)),k=s(797),d=s(820),m=s(796),h=s(795),f=s(800),g=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return Object(t.b)(a,n),a.prototype.render=function(){var n=this,a=this.props,s=a.prefixCls,t=a.onClick,p=a.visible,c=o()(s+"-simple",{"zent-select--visible":p});return e.createElement(f.a,{componentName:"Select"},function(a){return e.createElement("div",{className:c,onClick:t},n.props.text||e.createElement("span",{className:s+"-placeholder"},n.props.placeholder||a.input))})},a}(e.PureComponent),y=s(798);var v=function(n){function a(){var a=null!==n&&n.apply(this,arguments)||this;return a.clickHandler=function(n){var s=a.props,t=s.onClick,e=s.close,p=s.open,o=s.contentVisible,c=s.disabled;n.preventDefault(),o?e():c||(p(),t&&t(n))},a}return Object(t.b)(a,n),a.prototype.render=function(){var n=this.props,a=(n.onClick,n.trigger),s=n.onTriggerRefChange,p=Object(t.c)(n,["onClick","trigger","onTriggerRefChange"]),o=function(n){var a=n.simple,s=n.search,t=n.tags,e=n.trigger;return a?g:s?m.a:t?y.a:e||h.a}(a);return e.createElement(o,Object(t.a)({},p,{ref:s,onClick:this.clickHandler}))},a}(d.a.Trigger.Click),b=s(86),F=(s(729),s(732),function(n){function a(a){var s=n.call(this,a)||this;return s.inputRef=e.createRef(),s.changeHandler=s.changeHandler.bind(s),s.focused=!1,s}return Object(t.b)(a,n),a.prototype.componentDidUpdate=function(){var n=this;!this.focused&&this.props.ready&&(setTimeout(function(){n.inputRef.current&&n.inputRef.current.focus()},150),this.focused=!0)},a.prototype.changeHandler=function(n){this.props.onChange(n.target.value)},a.prototype.render=function(){var n=this.props,a=n.prefixCls,s=n.placeholder,t=n.keyword;return e.createElement(b.Input,{type:"text",ref:this.inputRef,placeholder:s,className:a+"-search",value:t,onChange:this.changeHandler})},a}(e.PureComponent)),w=s(253),x=s(9),E=function(n){function a(a){var s=n.call(this,a)||this;return s.popup=null,s.cancelEvent=null,s.handleScroll=function(n){n.stopPropagation(),(0===s.popup.scrollTop&&n.deltaY<0||s.popup.scrollTop+s.popup.clientHeight===s.popup.scrollHeight&&n.deltaY>0)&&n.preventDefault()},s.optionChangedHandler=function(n,a){var t=s.props,e=t.filter,p=t.data,o=s.state.keyword;s.setState({keyword:""}),s.props.popover.close(),s.props.onChange(n,p.filter(function(n){return(!o||!e||e(n,""+o))&&n.cid===a})[0])},s.searchFilterHandler=function(n){for(var a=s.props,t=a.onAsyncFilter,e=a.filter,p=a.adjustPosition,o=s.state,c=o.data,l=o.currentId,u=!!n&&!!e,i=0;i<c.length;i++){var r=c[i];if(u&&e(r,n)||!l){l=r.cid;break}}s.setState({keyword:n,currentId:l}),"function"==typeof t?t(""+n):Object(w.a)(function(){p()})},s.keydownHandler=function(n){var a=n.key,t=s.itemIds,e=s.state,p=e.currentId,o=e.keyword,c=t.indexOf(p),l=s.popup.clientHeight,u=s.popup.scrollHeight,i=s.popup.getElementsByClassName("current")[0];switch(a){case"Escape":s.props.popover.close();break;case"ArrowDown":n.preventDefault(),s.itemIds[c+1]?(p=s.itemIds[c+1],s.currentIdUpdated=!0,i&&i.offsetTop+28>=s.popup.scrollTop+l&&(s.popup.scrollTop=i.offsetTop+56-l)):(p=s.itemIds[0],s.popup.scrollTop=0);break;case"ArrowUp":n.preventDefault(),c>0?(p=s.itemIds[c-1],s.currentIdUpdated=!0,i&&i.offsetTop<=s.popup.scrollTop&&(s.popup.scrollTop=i.offsetTop-28)):(p=s.itemIds[s.itemIds.length-1],s.popup.scrollTop=u);break;case"Enter":n.preventDefault(),s.optionChangedHandler(o,p),s.currentIdUpdated=!1}s.setState({currentId:p})},s.state={data:a.data,currentId:a.data[0]?a.data[0].cid:0,keyword:a.keyword||"",style:{}},s.focused=!1,s}return Object(t.b)(a,n),a.prototype.componentDidMount=function(){var n=this.props,a=n.autoWidth,s=n.popover;a&&this.setState({style:{width:s.getTriggerNode().clientWidth+2+"px"}}),this.cancelEvent=Object(x.b)(this.popup,"mousewheel",this.handleScroll)},a.prototype.componentWillUnmount=function(){this.cancelEvent()},a.prototype.componentWillReceiveProps=function(n){var a=this;this.focused||!n.ready||n.filter||n.onAsyncFilter||(setTimeout(function(){a.popup&&a.popup.focus()},150),this.focused=!0);var s=n.keyword;this.setState({data:n.data,currentId:n.data[0]?n.data[0].cid:0}),this.props.extraFilter&&null!==s&&s!==this.state.keyword&&this.searchFilterHandler(s)},a.prototype.updateCurrentId=function(n){this.setState({currentId:n})},a.prototype.render=function(){var n=this,a=this.props,s=a.cid,p=a.selectedItems,o=a.emptyText,c=a.prefixCls,l=a.extraFilter,u=a.searchPlaceholder,i=a.filter,r=a.onAsyncFilter,d=a.maxToShow,m=a.autoWidth,h=a.ready,g=this.state,y=g.keyword,v=g.data,b=g.currentId,w=v.filter(function(n){return!y||!i||i(n,""+y)}),x=0===v.length||0===w.length;return this.itemIds=w.map(function(n){return n.cid}),d&&!l&&i&&(w=w.slice(0,d)),e.createElement("div",{ref:function(a){return n.popup=a},className:c+"-popup",onKeyDown:this.keydownHandler,tabIndex:0,style:m?this.state.style:null,onFocus:function(n){n.preventDefault()}},l||!i&&!r?"":e.createElement(F,{keyword:y,prefixCls:c,placeholder:u,onChange:this.searchFilterHandler,ready:h}),w.map(function(a,o){var l=a.cid===b?"current":"",u=p.filter(function(n){return n.cid===a.cid}).length>0||a.cid===s?"active":"";return e.createElement(k.a,Object(t.a)({key:o,className:c+"-option "+u+" "+l},a,{onClick:n.optionChangedHandler,onMouseEnter:n.updateCurrentId.bind(n,a.cid)}))}),x&&e.createElement(f.a,{componentName:"Select"},function(a){return e.createElement(k.a,{className:c+"-empty",text:o||a.empty,onClick:n.optionChangedHandler})}))},a.defaultProps={adjustPosition:u.a,cid:-1,keyword:"",selectedItems:[],emptyText:"",prefixCls:"",extraFilter:!1,searchPlaceholder:""},a}(e.Component),C=r.default.withPopover(E);s.d(a,"a",function(){return q});var j=r.default.Content,q=function(n){function a(a){var s=n.call(this,a)||this;return s.popover=null,s.popup=null,s.triggerChangeHandler=function(n){s.setState(n)},s.triggerDeleteHandler=function(n){var a=s.state.selectedItems;a=a.filter(function(a){return a.cid!==n.cid}),s.setState({selectedItems:a},function(){s.props.onDelete(n)})},s.optionChangedHandler=function(n,a){var e={};n=n||{preventDefault:u.a,stopPropagation:u.a};var p=s.props,o=p.onEmptySelected,c=p.optionValue,i=p.optionText,r=p.tags,k=p.onChange,d=p.retainNullOption,m=p.resetOption,h=s.state.selectedItems;if(a){var f=Object(l.a)(a,["cid"]);e[c]=a.value,e[i]=a.text;var g=Object(t.a)(Object(t.a)({},f),e);r?h.some(function(n){return n.cid===a.cid})||h.push(a):null!==a.value||!m&&d||(a={}),s.setState({keyword:null,selectedItems:h,selectedItem:a},function(){k({target:Object(t.a)(Object(t.a)({},s.props),{type:r?"select-multiple":"select-one",value:a.value}),preventDefault:function(){n.preventDefault()},stopPropagation:function(){n.stopPropagation()}},g)})}else o(n)},s.handlePopoverVisibleChange=function(n){n?s.props.onOpen():s.setState({optionsReady:!1}),s.setState({open:n})},s.state=Object(t.a)({selectedItems:[],selectedItem:{value:"",text:""},optionsReady:!1},a),s.uniformedData=s.uniformData(a),Object.assign(s.state,s.findSelected(a)),s}return Object(t.b)(a,n),a.prototype.componentWillReceiveProps=function(n){this.uniformedData=this.uniformData(n),this.setState(this.findSelected(n))},a.prototype.uniformData=function(n){var a=n.data,s=n.children,p=n.optionValue,o=n.optionText,c=n.resetOption,l=n.resetText,u=c&&(a||s)?[{cid:"-1",value:null,text:l}]:[];return a?u=u.concat(a.map(function(n,a){if("object"!=typeof n)return{text:n,value:n,cid:""+a};var s=Object(t.a)({},n);return s.cid=""+a,p&&(s.value=n[p]),o&&(s.text=n[o]),s})):(s&&(u=u.concat(e.Children.map(s,function(n,a){var s=n.props.value;return s=void 0===s?n:s,Object(t.a)(Object(t.a)({},n.props),{value:s,cid:""+a,text:n.props.children})}))),u)},a.prototype.findSelected=function(n,a){var s=this;if(void 0===a&&(a=this.uniformedData),!a||!a.length)return{selectedItem:{},selectedItems:[]};var t=this.state,e=t.selectedItem,p=t.selectedItems,o=n.value,c=n.index,l=n.initialIndex,u=n.initialValue,i={sItem:e,sItems:[]};return a.forEach(function(n,a){if(0===p.length&&!e.cid&&(null!==u||null!==l)){var t={value:u,index:l};s.locateSelected(i,t,n,a)}null===o&&null===c||s.locateSelected(i,{value:o,index:c},n,a)}),{selectedItem:i.sItem,selectedItems:i.sItems}},a.prototype.locateSelected=function(n,a,s,t){var e=a.value,p=a.index;if(Array.isArray(e)){var o=e.indexOf(s.value);o>-1&&!n.sItems.find(function(n){return n&&n.value===s.value})?n.sItems[o]=s:0===e.length&&(n.sItem={},n.sItems=[])}else"object"==typeof e&&Object(c.a)(e,s.value)?n.sItem=s:void 0!==e&&"object"!=typeof e&&""+s.value==""+e||"undefined"!==p&&""+t==""+p?n.sItem=s:e||p||0===e||(n.sItem={},n.sItems=[])},a.prototype.render=function(){var n=this,a=this.props,s=a.placeholder,p=a.maxToShow,c=a.className,l=a.popupClassName,u=a.disabled,i=void 0===u?this.context.value:u,k=a.emptyText,d=a.filter,m=void 0===d?this.props.onFilter:d,h=a.onAsyncFilter,f=a.searchPlaceholder,g=a.autoWidth,y=a.width,b=a.simple,F=a.search,w=a.tags,x=a.trigger,E=this.state,q=E.open,S=E.selectedItems,z=E.selectedItem,O=void 0===z?{}:z,T=E.extraFilter,N=E.optionsReady,A=E.keyword,D=void 0===A?null:A,I=O.cid,V=void 0===I?"":I,P=i?"zent-select--disabled":"";return e.createElement(r.default,{display:"inline-block",cushion:4,ref:function(a){return n.popover=a},position:r.default.Position.AutoBottomLeft,visible:q,className:o()("zent-select__popover",l,{"zent-select-auto-width":g}),wrapperClassName:o()("zent-select",c,P),onVisibleChange:this.handlePopoverVisibleChange,width:y,onPositionReady:function(){n.setState({optionsReady:!0})}},e.createElement(v,Object(t.a)({visible:q,disabled:i,prefixCls:"zent-select",placeholder:s,selectedItems:S,keyword:D},O,{trigger:{simple:b,search:F,tags:w,trigger:x},onChange:this.triggerChangeHandler,onDelete:this.triggerDeleteHandler})),e.createElement(j,null,e.createElement(C,{ref:function(a){return n.popup=a},cid:V,prefixCls:"zent-select",data:this.uniformedData,ready:N,selectedItems:S,extraFilter:T,searchPlaceholder:f,emptyText:k,keyword:D,filter:m,onAsyncFilter:h,maxToShow:p,onChange:this.optionChangedHandler,autoWidth:g,adjustPosition:this.popover&&this.popover.adjustPosition.bind(this.popover)})))},a.defaultProps={open:!1,optionValue:"value",optionText:"text",onChange:u.a,onDelete:u.a,onEmptySelected:u.a,onOpen:u.a,autoWidth:!1,resetOption:!1,resetText:"...",retainNullOption:!1,value:null,index:null,initialValue:null,initialIndex:null},a.Option=k.a,a.SelectTrigger=h.a,a.InputTrigger=m.a,a.TagsTrigger=y.a,a.contextType=i.a,a}(e.Component);a.b=q},819:function(n,a,s){"use strict";s.d(a,"a",function(){return d});var t=s(728),e=s(0),p=s(2),o=s.n(p),c=s(740),l=s(301),u=s(164),i=s(792),r=s(800),k=864e5,d=function(n){function a(a){var s,t=n.call(this,a)||this;t.handleTimeChange=function(n){(0,t.props.onChange)(n,NaN)},t.handleChosenDays=function(n){var a=t.props,s=a.format;(0,a.onChange)(function(n,a,s){var t,e,p=(u=new Date,u.setHours(0),u.setMinutes(0),u.setSeconds(0),u.setMilliseconds(0),u.getTime()),o=p+k;var u;Array.isArray(a)?(t=a[0],e=a[1]):(t=a>1?p-(a-1)*k:p-a*k,e=0===a?o-1e3:1===a?p-1e3:Date.now());var i=Object(l.a)(t),r=Object(l.a)(e);if("number"===s)return[i.getTime(),r.getTime()];if("date"===s)return[i,r];var d=Object(c.a)(i,n),m=Object(c.a)(r,n);return[d,m]}(s,n,a.valueType),n)};var e=a.value,p=a.defaultSelectedPresetIndex,o=a.preset;if("number"==typeof p&&(!e||Array.isArray(e)&&!e.length)){var u=null===(s=o[p])||void 0===s?void 0:s.value;void 0!==u&&t.handleChosenDays(u)}return t}return Object(t.b)(a,n),a.prototype.render=function(){var n=this,a=this.props,s=a.className,p=a.format,c=a.value,l=a.chooseDays,k=a.chosenDays,d=a.preset,m=Object(t.c)(a,["className","format","value","chooseDays","chosenDays","preset"]),h="YYYY-MM-DD"===p,f=null!=k?k:l;return e.createElement("div",{className:o()("zent-date-range-picker",s)},e.createElement(i.b,Object(t.a)({value:c,onChange:this.handleTimeChange,format:p,showTime:!h},m)),e.createElement("div",{className:"zent-date-range-picker__filter"},d.map(function(a,s){return e.createElement(r.a,{key:s,componentName:"RangePicker"},function(t){return e.createElement("span",{key:s,className:o()("zent-date-range-picker__btn",{active:Object(u.a)(f,a.value)}),onClick:n.handleChosenDays.bind(n,a.value)},a.text||("number"==typeof a.value?t[a.value]:"N/A"))})})))},a.defaultProps={prefix:"zent",className:"",value:[],valueType:"string",format:"YYYY-MM-DD",preset:[{value:7},{value:30}],min:"",max:""},a}(e.Component)},827:function(n,a,s){"use strict";var t=s(728),e=s(0),p=s(2),o=s.n(p),c=s(748),l=s(191),u=s(773),i=(s(401),s(729),s(746),s(800)),r=s(86),k=s(196),d=(s(730),s(741),s(732),s(298)),m=s(213),h=(s(747),1048576),f=1024*h;function g(n,a){return void 0===a&&(a=1),(n=+n||0)>=f?(n/f).toFixed(a)+" GB":n>=h?(n/h).toFixed(a)+" MB":n>=1024?(n/1024).toFixed(a)+" KB":n.toFixed(a)+" B"}function y(n,a,s){return void 0===n&&(n=s),"function"==typeof n?n(a):n}var v=function(n){return Array.from(n).map(function(n){return n.charCodeAt(0)})},b=v("META-INF/mozilla.rsa"),F=v("[Content_Types].xml"),w=v("_rels/.rels"),x=function(n){var a=n instanceof Uint8Array?n:new Uint8Array(n);if(!(a&&a.length>1))return null;var s=function(n,s){s=Object(t.a)({offset:0},s);for(var e=0;e<n.length;e++)if(s.mask){if(n[e]!==(s.mask[e]&a[e+s.offset]))return!1}else if(n[e]!==a[e+s.offset])return!1;return!0};if(s([255,216,255]))return{ext:"jpg",mime:"image/jpeg"};if(s([137,80,78,71,13,10,26,10]))return{ext:"png",mime:"image/png"};if(s([71,73,70]))return{ext:"gif",mime:"image/gif"};if(s([87,69,66,80],{offset:8}))return{ext:"webp",mime:"image/webp"};if(s([70,76,73,70]))return{ext:"flif",mime:"image/flif"};if((s([73,73,42,0])||s([77,77,0,42]))&&s([67,82],{offset:8}))return{ext:"cr2",mime:"image/x-canon-cr2"};if(s([73,73,42,0])||s([77,77,0,42]))return{ext:"tif",mime:"image/tiff"};if(s([66,77]))return{ext:"bmp",mime:"image/bmp"};if(s([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(s([56,66,80,83]))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(s([80,75,3,4])){if(s([109,105,109,101,116,121,112,101,97,112,112,108,105,99,97,116,105,111,110,47,101,112,117,98,43,122,105,112],{offset:30}))return{ext:"epub",mime:"application/epub+zip"};if(s(b,{offset:30}))return{ext:"xpi",mime:"application/x-xpinstall"};if(s(F,{offset:30})||s(w,{offset:30})){var e=function(n){return n.findIndex(function(n,a,s){return 80===s[a]&&75===s[a+1]&&3===s[a+2]&&4===s[a+3]})},p=e(a.subarray(4,2004));if(-1!==p){var o=e(a.subarray(p+8,p+8+1e3));if(-1!==o){var c=8+p+o+30;if(s(v("word/"),{offset:c}))return{ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"};if(s(v("ppt/"),{offset:c}))return{ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"};if(s(v("xl/"),{offset:c}))return{ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"}}}}}if(s([80,75])&&(3===a[2]||5===a[2]||7===a[2])&&(4===a[3]||6===a[3]||8===a[3]))return{ext:"zip",mime:"application/zip"};if(s([117,115,116,97,114],{offset:257}))return{ext:"tar",mime:"application/x-tar"};if(s([82,97,114,33,26,7])&&(0===a[6]||1===a[6]))return{ext:"rar",mime:"application/x-rar-compressed"};if(s([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(s([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(s([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(s([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(s([51,103,112,53])||s([0,0,0])&&s([102,116,121,112],{offset:4})&&(s([109,112,52,49],{offset:8})||s([109,112,52,50],{offset:8})||s([105,115,111,109],{offset:8})||s([105,115,111,50],{offset:8})||s([109,109,112,52],{offset:8})||s([77,52,86],{offset:8})||s([100,97,115,104],{offset:8})))return{ext:"mp4",mime:"video/mp4"};if(s([77,84,104,100]))return{ext:"mid",mime:"audio/midi"};if(s([26,69,223,163])){var l=a.subarray(4,4100),u=l.findIndex(function(n,a,s){return 66===s[a]&&130===s[a+1]});if(-1!==u){var i=u+3,r=function(n){return Array.from(n).every(function(n,a){return l[i+a]===n.charCodeAt(0)})};if(r("matroska"))return{ext:"mkv",mime:"video/x-matroska"};if(r("webm"))return{ext:"webm",mime:"video/webm"}}}if(s([0,0,0,20,102,116,121,112,113,116,32,32])||s([102,114,101,101],{offset:4})||s([102,116,121,112,113,116,32,32],{offset:4})||s([109,100,97,116],{offset:4})||s([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(s([82,73,70,70])&&s([65,86,73],{offset:8}))return{ext:"avi",mime:"video/x-msvideo"};if(s([48,38,178,117,142,102,207,17,166,217]))return{ext:"wmv",mime:"video/x-ms-wmv"};if(s([0,0,1,186]))return{ext:"mpg",mime:"video/mpeg"};if(s([0,0,0,28,102,116,121,112,51,103,112,52]))return{ext:"3gp",mime:"video/3gpp"};for(var k=0;k<2&&k<a.length-16;k++)if(s([73,68,51],{offset:k})||s([255,226],{offset:k,mask:[255,226]}))return{ext:"mp3",mime:"audio/mpeg"};if(s([102,116,121,112,77,52,65],{offset:4})||s([77,52,65,32]))return{ext:"m4a",mime:"audio/m4a"};if(s([79,112,117,115,72,101,97,100],{offset:28}))return{ext:"opus",mime:"audio/opus"};if(s([79,103,103,83]))return s([128,116,104,101,111,114,97],{offset:28})?{ext:"ogv",mime:"video/ogg"}:s([1,118,105,100,101,111,0],{offset:28})?{ext:"ogm",mime:"video/ogg"}:s([127,70,76,65,67],{offset:28})?{ext:"oga",mime:"audio/ogg"}:s([83,112,101,101,120,32,32],{offset:28})?{ext:"spx",mime:"audio/ogg"}:s([1,118,111,114,98,105,115],{offset:28})?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"};if(s([102,76,97,67]))return{ext:"flac",mime:"audio/x-flac"};if(s([82,73,70,70])&&s([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/x-wav"};if(s([35,33,65,77,82,10]))return{ext:"amr",mime:"audio/amr"};if(s([37,80,68,70]))return{ext:"pdf",mime:"application/pdf"};if(s([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if((67===a[0]||70===a[0])&&s([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(s([123,92,114,116,102]))return{ext:"rtf",mime:"application/rtf"};if(s([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(s([119,79,70,70])&&(s([0,1,0,0],{offset:4})||s([79,84,84,79],{offset:4})))return{ext:"woff",mime:"font/woff"};if(s([119,79,70,50])&&(s([0,1,0,0],{offset:4})||s([79,84,84,79],{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(s([76,80],{offset:34})&&(s([0,0,1],{offset:8})||s([1,0,2],{offset:8})||s([2,0,2],{offset:8})))return{ext:"eot",mime:"application/octet-stream"};if(s([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(s([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(s([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(s([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(s([37,33]))return{ext:"ps",mime:"application/postscript"};if(s([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(s([83,81,76,105]))return{ext:"sqlite",mime:"application/x-sqlite3"};if(s([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(s([67,114,50,52]))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(s([77,83,67,70])||s([73,83,99,40]))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(s([33,60,97,114,99,104,62,10,100,101,98,105,97,110,45,98,105,110,97,114,121]))return{ext:"deb",mime:"application/x-deb"};if(s([33,60,97,114,99,104,62]))return{ext:"ar",mime:"application/x-unix-archive"};if(s([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(s([31,160])||s([31,157]))return{ext:"Z",mime:"application/x-compress"};if(s([76,90,73,80]))return{ext:"lz",mime:"application/x-lzip"};if(s([208,207,17,224,161,177,26,225]))return{ext:"msi",mime:"application/x-msi"};if(s([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(s([71],{offset:4})&&(s([71],{offset:192})||s([71],{offset:196})))return{ext:"mts",mime:"video/mp2t"};if(s([66,76,69,78,68,69,82]))return{ext:"blend",mime:"application/x-blender"};if(s([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(s([0,0,0,12,106,80,32,32,13,10,135,10])){if(s([106,112,50,32],{offset:20}))return{ext:"jp2",mime:"image/jp2"};if(s([106,112,120,32],{offset:20}))return{ext:"jpx",mime:"image/jpx"};if(s([106,112,109,32],{offset:20}))return{ext:"jpm",mime:"image/jpm"};if(s([109,106,112,50],{offset:20}))return{ext:"mj2",mime:"image/mj2"}}return s([70,79,82,77,0])?{ext:"aif",mime:"audio/aiff"}:null};function E(n,a){return new Promise(function(s,t){var e=n.onUpload;if("function"!=typeof e)return t("onUpload is not a function");var p=e(a.localFiles||[],a);Object(d.a)(p)?p.then(s).catch(t):s()})}var C="__uid",j={image:"image/gif, image/jpeg, image/png, image/bmp",voice:"audio/mpeg, audio/amr"},q=function(n){return n},S=function(n){function a(a){var s=n.call(this,a)||this;s.onFileChange=function(n){var a=s.props.onChange;a?a(n):E(s.props,{localFiles:n})},s.processFiles=function(n){return function(a){var t=Array.from(a.target.files),e=s.props,p=e.filterFiles,o=e.onError,c=p(t),l=s.iteratorFiles(n);Object(d.a)(c)?c.then(l,o):l(t=c),a.target.value=null}},s.iteratorFiles=function(n){return function(a){var t=s.props,e=t.type,p=t.maxSize,o=t.maxAmount,c=t.silent,l=t.initIndex,u=t.errorMessages;a&&a.forEach(function(a,t){if(o&&t+l>=o){var i=y(u.overMaxAmount,{maxAmount:o,type:e},n.input.maxAmount);return!c&&i&&m.a.error(i),!1}if(!p||a.size<=p)s.addFile(a,t,n);else{i=y(u.overMaxSize,{maxSize:g(p),type:e},n.input.maxSize);!c&&i&&m.a.error(i)}return!0})}},s.autoShowInput=function(n){var a=s.props,t=a.maxAmount;a.auto&&1===t&&n&&"function"==typeof n.click&&n.click()};var t=a.accept,e=a.type;return t||(t=j[e]),s.state={accept:t},s}return Object(t.b)(a,n),a.prototype.addFile=function(n,a,s){var t=this,e=new FileReader,p=this.props,o=p.type,c=p.initIndex,l=p.silent,u=p.errorMessages,i=this.state.accept,r=[];e.onload=function(e){var p,k=x(function(n){for(var a=window.atob(n),s=a.length,t=new Uint8Array(s),e=0;e<s;e++)t[e]=a.charCodeAt(e);return t.buffer}(e.target.result.replace(/^(.*?)base64,/,"")));if(!i||k&&!k.mime.match(new RegExp(i.replace(/, ?/g,"|")))){var d=y(u.wrongMimeType,{type:o},s.input.type);!l&&d&&m.a.error(d)}else r.push(((p={src:e.target.result,file:n})[C]=c+a,p));t.onFileChange(r)},e.readAsDataURL(n)},a.prototype.render=function(){var n=this,a=this.props.maxAmount,s=this.state.accept;return e.createElement(i.a,{componentName:"Upload"},function(t){return e.createElement("input",{ref:n.autoShowInput,type:"file",placeholder:t.input.holder+" +",multiple:1!==a,accept:s,onChange:n.processFiles(t)})})},a.defaultProps={initIndex:0,maxAmount:0,silent:!1,maxSize:0,type:"",filterFiles:q,onError:q},a}(e.PureComponent),z=function(n){function a(){var a=null!==n&&n.apply(this,arguments)||this;return a.state={hideDeleteIcon:!1},a.handleRemove=function(){var n=a.props,s=n.index;(0,n.onDelete)(s)},a.handleDragStart=function(){a.setState({hideDeleteIcon:!0})},a.handleDragEnd=function(){a.setState({hideDeleteIcon:!1})},a}return Object(t.b)(a,n),a.prototype.render=function(){var n=this.props,a=n.progress,s=n.src,t=n.index,p=n.prefix,o=this.state.hideDeleteIcon;return e.createElement("li",{className:p+"-image-item",onDragStart:this.handleDragStart,onDragEnd:this.handleDragEnd,"data-id":t},e.createElement("div",{className:p+"-image-item__box",style:{backgroundImage:"url("+s+")"}}),!o&&e.createElement("span",{className:p+"__close-modal",onClick:this.handleRemove},"×"),a&&e.createElement("div",{className:p+"-image-item__progress"},a.toFixed(1)+"%"))},a}(e.PureComponent),O=s(304),T="unsortable";var N=s(785),A=function(n){function a(a){var s=n.call(this,a)||this;return s.handleMove=function(n,a){var t=s.state.localFiles;t=function(n,a,s){var t=Array.from([].concat(n)),e=t.splice(a,1)[0];return t.splice(s,0,e),t}(t,n,a),s.setState({localFiles:t})},s.handleDelete=function(n){var a=s.state.localFiles;a.splice(n,1),s.setState({localFiles:a})},s.handleChange=function(n){var a=s.state.localFiles;(a=a.concat(n)).sort(function(n,a){return n[C]>a[C]?1:-1}),s.setState({localFiles:a})},s.onListRefChange=function(n){var a,t,e,p;n?s.sortable=(a=n,t=s.handleMove,e=[],p=O.create(a,{filter:"."+T,onStart:function(){e=p.toArray()},onMove:function(n){return n.related.className!==T},onEnd:function(n){var a=n.newIndex,s=n.oldIndex;p.sort(e),t(s,a)}})):s.sortable&&s.sortable.destroy()},s.state={categoryId:a.options.categoryId,networkImage:a.networkImage,networkUploading:a.networkUploading,localUploading:a.localUploading,buttonText:a.i18n.popup.extract,localFiles:[]},s.networkUrl="",s.confirmNetworkUrl=s.confirmNetworkUrl.bind(s),s.networkUrlChanged=s.networkUrlChanged.bind(s),s.uploadLocalImages=s.uploadLocalImages.bind(s),s.fileProgressHandler=s.fileProgressHandler.bind(s),s.setCategoryId=s.setCategoryId.bind(s),s}return Object(t.b)(a,n),a.prototype.render=function(){var n=this.props,a=n.prefix,s=n.options,t=n.className,p=s.categoryList;return e.createElement("div",{className:t},e.createElement("div",{className:a+"-container"},p.length>0&&this.renderUploadGroup(this.props),!s.localOnly&&"voice"!==s.type&&this.renderNetworkRegion(this.props),this.renderLocalUploadRegion(this.props)),this.renderFooterRegion())},a.prototype.setCategoryId=function(n,a){this.setState({categoryId:a.id})},a.prototype.renderUploadGroup=function(n){var a=n.prefix,s=n.i18n,t=n.options.categoryList,p=this.state.categoryId;return e.createElement("div",{className:a+"-group-region"},e.createElement("div",{className:a+"-title"},s.popup.group,"："),e.createElement("div",{className:a+"-content"},e.createElement(N.a,{width:300,autoWidth:!0,data:t,value:p,optionValue:"id",optionText:"name",onChange:this.setCategoryId.bind(this)})))},a.prototype.renderNetworkRegion=function(n){var a=n.prefix,s=n.i18n,t=this.state,p=t.networkImage,o=t.networkUploading,c=t.buttonText;return e.createElement("div",{className:a+"-network-image-region"},e.createElement("div",{className:a+"-title"},s.popup.web,"："),e.createElement("div",{className:a+"-content"},e.createElement("div",{className:a+"-input-append"},e.createElement(r.Input,{type:"text",placeholder:s.popup.holder,onChange:this.networkUrlChanged})),e.createElement(k.a,{type:"primary",outline:!0,loading:o,onClick:this.confirmNetworkUrl},c),e.createElement("div",{className:a+"-image-preview"},e.createElement("img",{src:p.attachment_url,alt:""}))))},a.prototype.renderLocalImage=function(n,a){var s=this.props.prefix;return e.createElement(z,Object(t.a)({prefix:s,key:a},n,{index:a,onDelete:this.handleDelete}))},a.prototype.renderLocalVoice=function(n,a){var s=this.props.prefix;return e.createElement("li",{key:a,className:s+"-voice-item"},e.createElement("div",{className:s+"-voice-item__icon"}),e.createElement("div",{className:s+"-voice-item__name"},n.file.name),e.createElement("div",{className:s+"-voice-item__createtime"},g(n.file.size)),e.createElement("span",{className:s+"__close-modal",onClick:this.handleDelete.bind(this,a)},"×"),n.progress?e.createElement("div",{className:s+"-voice-item__progress"},n.progress.toFixed(1)+"%"):"")},a.prototype.renderLocalUploadRegion=function(n){var a=this,s=n.prefix,p=n.accept,o=n.options,c=n.i18n,u=this.state.localFiles,i=0,r=u.length;return r>0&&(i=u[r-1][C]+1),e.createElement("div",{className:s+"-local-attachment-region"},e.createElement("div",{className:s+"-title"},c.popup["title_"+o.type]+"："),e.createElement("div",{className:s+"-content"},r>0&&e.createElement("ul",{ref:this.onListRefChange,className:s+"__upload-local-"+o.type+"-list"},u.map(function(n,s){return"voice"===o.type?a.renderLocalVoice(n,s):a.renderLocalImage(n,s)})),!o.maxAmount||u.length<o.maxAmount?e.createElement("div",{className:s+"-add-local-image-button pull-left"},e.createElement(l.a,{type:"plus"}),e.createElement(S,Object(t.a)({},n.options,{auto:!1,i18n:c,accept:p,initIndex:i,onChange:this.handleChange}))):"",e.createElement("div",{className:s+"-local-tips c-gray"},c.popup.type({types:p.replace(/image\/?|audio\/?/g,"").split(","),size:g(o.maxSize)}))))},a.prototype.renderFooterRegion=function(){var n=this.state,a=n.localUploading,s=n.localFiles,t=this.props,p=t.i18n,o=t.prefix;return e.createElement("div",{className:o+"__footer"},e.createElement(k.a,{type:"primary",size:"large",disabled:0===s.length,loading:a,onClick:this.uploadLocalImages},p.confirm))},a.prototype.uploadLocalImages=function(){var n=this,a=this.props,s=a.options,t=a.showUploadPopup,e=this.state,p=e.localFiles,o=e.categoryId;this.setState({localUploading:!0}),E(s,{localFiles:p,categoryId:o,onProgress:this.fileProgressHandler}).then(function(){n.setState({localUploading:!1}),t(!1)}).catch(function(){n.setState({localUploading:!1})})},a.prototype.networkUrlChanged=function(n){this.networkUrl=n.target.value},a.prototype.fileProgressHandler=function(n,a){var s=this.state.localFiles,t=s.findIndex(function(n){return n[C]===a});t>=0&&(s[t].progress=n),this.setState(s)},a.prototype.confirmNetworkUrl=function(){var n=this,a=this.props,s=a.options,t=a.showUploadPopup,e=a.i18n,p=this.state.categoryId;return!!this.networkUrl&&(this.setState({networkUploading:!0,buttonText:e.popup.extracting}),s.onFetch(this.networkUrl,p).then(function(){n.setState({networkImage:{},networkUploading:!1,buttonText:e.popup.extract}),t(!1)},function(){n.setState({networkUploading:!1,buttonText:e.popup.extract})}))},a.defaultProps={networkImage:{},networkUploading:!1,buttonText:"",options:{},className:""},a}(e.Component);s.d(a,"a",function(){return I});var D=function(){return new Promise(function(n){return n([])})},I=function(n){function a(a){var s=n.call(this,a)||this;return s.showUpload=function(n){void 0===n&&(n=!0);var a=s.props,t=a.localOnly,e=a.maxAmount;s.isUnmount||t&&1===e||s.setState({visible:n})},s.state={visible:!1},s.showUpload=s.showUpload.bind(s),s.closePopup=s.closePopup.bind(s),s}return Object(t.b)(a,n),a.prototype.componentDidMount=function(){this.props.auto&&this.showUpload(),this.props.silent&&console.warn("silent is deprecated, please use errorMessages to instead.")},a.prototype.componentWillUnmount=function(){this.isUnmount=!0},a.prototype.closePopup=function(){this.setState({visible:!1})},a.prototype.render=function(){var n=this,a=this.props,s=a.trigger,p=a.prefix,c=a.className,r=a.triggerClassName,k=a.tips,d=a.children,m=a.triggerInline,h=a.withoutPopup,f=Object(t.c)(a,["trigger","prefix","className","triggerClassName","tips","children","triggerInline","withoutPopup"]),g=this.state.visible,y=s;c===p+"-upload"&&(c="");var v=o()([p+"-upload",c]);c=o()([v,{inline:m}]);var b=f.accept||j[f.type];return e.createElement(i.a,{componentName:"Upload"},function(a){return h?e.createElement(A,{prefix:p+"-upload",options:f,accept:b,className:c,i18n:a,showUploadPopup:n.showUpload}):e.createElement(e.Fragment,null,e.createElement("div",{className:c},e.createElement("span",{className:r,onClick:n.showUpload.bind(n,!0)},d||y&&e.createElement(y,null)||e.createElement(l.a,{type:"plus"}),f.localOnly&&1===f.maxAmount&&e.createElement(S,Object(t.a)({},f,{i18n:a}))),e.createElement(u.a,{title:a["title_"+n.props.type],visible:g,className:v,onClose:n.closePopup},e.createElement(A,{prefix:p+"-upload",options:f,accept:b,className:c,i18n:a,showUploadPopup:n.showUpload}))),e.createElement("p",{className:p+"-upload-tips"},k))})},a.FileInput=S,a.defaultProps={prefix:"zent",className:"zent-upload",triggerClassName:"zent-upload-trigger",maxSize:1048576,maxAmount:0,tips:"",localOnly:!1,auto:!1,type:"image",filterFiles:c.a,onFetch:D,onUpload:D,categoryList:[],categoryId:"",triggerInline:!1,silent:!1,withoutPopup:!1,errorMessages:{}},a}(e.Component)},843:function(n,a,s){"use strict";s.r(a),s.d(a,"default",function(){return nn});var t=s(734),e=s.n(t),p=s(36),o=s.n(p),c=s(27),l=s.n(c),u=s(22),i=s.n(u),r=s(23),k=s.n(r),d=s(24),m=s.n(d),h=s(25),f=s.n(h),g=s(26),y=s.n(g),v=s(0),b=s.n(v),F=s(297),w=s(214),x=s(191),E=s(213),C=s(772),j=s(193),q=s(196),S=s(206),z=s(86),O=s(803),T=s(827),N=s(752),A=s.n(N),D=s(2),I=s.n(D),V=function(){O.a.Field;var n=O.a.FormInputField,a=O.a.createForm,s=function(a){function s(){return i()(this,s),m()(this,f()(s).apply(this,arguments))}return y()(s,a),k()(s,[{key:"render",value:function(){return b.a.createElement(O.a,{horizontal:!0},b.a.createElement(n,{name:"name",type:"text",label:b.a.createElement("span",null,"User Name ",b.a.createElement(w.a,{trigger:"hover",content:"User name is used for personal login.",centerArrow:!0},b.a.createElement(x.a,{type:"error-circle-o"})),":"),helpDesc:"User name is 5-25 characters.",required:!0}),b.a.createElement(n,{name:"password",type:"password",label:"Password:",helpDesc:b.a.createElement("span",null,"The password consists of 6-20 letters or numbers.",b.a.createElement("a",{href:"https://youzan.com",target:"_blank"},"Watch more.")),notice:"Notice that user name and password cannot be modified after submitting. Please submit carefully.",required:!0}))}}]),s}(b.a.Component),t=a()(s);return b.a.createElement(t,null)},P=function(){O.a.Field;var n=O.a.FormInputField,a=O.a.FormSelectField,s=O.a.FormRadioGroupField,t=O.a.FormCheckboxField,e=O.a.FormCheckboxGroupField,p=O.a.FormColorPickerField,c=O.a.FormDateRangePickerField,u=O.a.FormDateRangeQuickPickerField,r=O.a.FormNumberInputField,d=O.a.FormSwitchField,h=O.a.createForm,g=function(h){function g(){var n,a;i()(this,g);for(var s=arguments.length,t=new Array(s),e=0;e<s;e++)t[e]=arguments[e];return a=m()(this,(n=f()(g)).call.apply(n,[this].concat(t))),l()(o()(a),"state",{checkedList:[]}),l()(o()(a),"onCheckboxChange",function(n){a.setState({checkedList:n})}),l()(o()(a),"submit",function(n,a){E.a.success(JSON.stringify(n))}),l()(o()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return y()(g,h),k()(g,[{key:"render",value:function(){var o=this.props.handleSubmit;return b.a.createElement(O.a,{horizontal:!0,onSubmit:o(this.submit)},b.a.createElement(n,{name:"name",type:"text",label:"Name:",required:!0,spellCheck:!1,validations:{required:!0},validationErrors:{required:"Please enter the name."}}),b.a.createElement(a,{name:"type",label:"Type:",data:[{value:1,text:"Volumn"},{value:2,text:"VIP"}],required:!0,validations:{required:!0},validationErrors:{required:"Please choose the type."}}),b.a.createElement(s,{name:"sex",label:"Gender:",required:!0,validations:{required:function(n,a){return""!==a}},validationErrors:{required:"Please choose sex."}},b.a.createElement(C.a,{value:"1"},"Male"),b.a.createElement(C.a,{value:"2"},"Female")),b.a.createElement(e,{name:"hobbies",label:"Hobbies:",value:this.state.checkedList,onChange:this.onCheckboxChange,required:!0,validations:{minLength:1},validationErrors:{minLength:"Please choose hobbies."}},b.a.createElement(j.a,{value:"movie"},"Movie"),b.a.createElement(j.a,{value:"book"},"Book"),b.a.createElement(j.a,{value:"travel"},"Travel")),b.a.createElement(r,{name:"age",label:"Age:",showStepper:!0,value:12}),b.a.createElement(p,{name:"color",label:"Favourite color:",value:"#5197FF"}),b.a.createElement(c,{name:"dateRange",label:"Validity period:",type:"split",value:[],dateFormat:"YYYY-MM-DD HH:mm:ss",validations:{required:function(n,a){return!!a[0]&&!!a[1]}},validationErrors:{required:"Please select the dateRange"}}),b.a.createElement(u,{name:"dateQuickRange",label:"Time Range:"}),b.a.createElement(d,{name:"isPublic",label:"Public information:",value:!1}),b.a.createElement(t,{name:"agree",label:"All permissions:"},"agree"),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit"},"submit"),b.a.createElement(q.a,{type:"primary",outline:!0,onClick:this.resetForm},"reset")))}}]),g}(b.a.Component),v=h({scrollToError:!0})(g);return b.a.createElement(v,null)},_=function(){var n=O.a.Field,a=O.a.createForm,s=O.a.getControlGroup,t=O.a.unknownProps,p=s(function(n){function a(){var n,s;i()(this,a);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return s=m()(this,(n=f()(a)).call.apply(n,[this].concat(e))),l()(o()(s),"wrappedOnChange",function(n){s.props.onChange(n)}),s}return y()(a,n),k()(a,[{key:"render",value:function(){var n=A()(this.props,t),a=this.props.value;return b.a.createElement("div",null,b.a.createElement(T.a,e()({},n,{onUpload:this.wrappedOnChange,localOnly:!0})),a&&a.map(function(n,a){return b.a.createElement("img",{width:"80",height:"80",key:a,src:n.src,style:{marginLeft:"10px"}})}))}}]),a}(b.a.Component)),c=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return a=m()(this,(n=f()(s)).call.apply(n,[this].concat(e))),l()(o()(a),"updateLocalImage",function(n){return new Promise(function(a){a(n)})}),l()(o()(a),"submit",function(n,a){E.a.success(JSON.stringify(n))}),l()(o()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return y()(s,a),k()(s,[{key:"render",value:function(){var a=this.props.handleSubmit;return b.a.createElement(O.a,{horizontal:!0,onSubmit:a(this.submit)},b.a.createElement(n,{name:"imgs",label:"materials:",component:p,value:[],maxSize:8e6,triggerInline:!0,tips:"Recommended size：640 x 640 pixels",onUpload:this.updateLocalImage}),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit"},"submit"),b.a.createElement(q.a,{type:"primary",outline:!0,onClick:this.resetForm},"reset")))}}]),s}(b.a.Component),u=a()(c);return b.a.createElement(u,null)},R=function(){var n=O.a.Field,a=O.a.createForm,s=S.a.SelectTrigger,t=[{code:"+86",zh:"zhongguo",eng:"china",value:"China +86",index:0},{code:"+853",zh:"aomen",eng:"Macau",value:"China Macau +853",index:1}],e=function(n){function a(){var n,s;i()(this,a);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return s=m()(this,(n=f()(a)).call.apply(n,[this].concat(e))),l()(o()(s),"onSelectChange",function(n,a){var t={areacode:a.index};s.props.onChange(t,{merge:!0})}),l()(o()(s),"onPhoneChange",function(n){var a=s.props.value,t=Object.assign({},a,{mobile:n.target.value});s.props.onChange(t)}),l()(o()(s),"filterHandler",function(n,a){return a&&n.text.trim().toLowerCase().indexOf(a.trim().toLowerCase())>-1}),s}return y()(a,n),k()(a,[{key:"render",value:function(){var n=this.props,a=n.value,t=n.displayError,e=void 0===t?n.isDirty&&null!==n.error:t,p=n.helpDesc,o=I()({"zent-form__control-group":!0,"has-error":e});return b.a.createElement("div",{className:o},b.a.createElement("label",{className:"zent-form__control-label"},"Contact Phone:"),b.a.createElement("div",{className:"zent-form__controls"},b.a.createElement("div",{style:{display:"flex"}},b.a.createElement(S.a,{className:"areacode",value:a.areacode,data:n.areadata,filter:this.filterHandler,optionValue:"index",optionText:"value",trigger:s,onChange:this.onSelectChange}),b.a.createElement(z.Input,{className:"phone-num",placeholder:"Enter your phone",value:a.mobile,onChange:this.onPhoneChange,width:160})),e&&b.a.createElement("p",{className:"zent-form__error-desc"},n.error),p&&b.a.createElement("p",{className:"zent-form__help-desc"},p)))}}]),a}(b.a.Component),p=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return a=m()(this,(n=f()(s)).call.apply(n,[this].concat(e))),l()(o()(a),"getFormValues",function(){var n=a.props.zentForm;E.a.success(JSON.stringify(n.getFormValues()))}),l()(o()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return y()(s,a),k()(s,[{key:"render",value:function(){return b.a.createElement(O.a,{horizontal:!0},b.a.createElement(n,{name:"contactPhone",value:{areacode:1,mobile:15899776666},areadata:t,component:e,helpDesc:"Only phone numbers of China mainland and Macau are supported now.",validations:{validMobile:function(n,a){var s=+a.mobile;return/^\d{1,10}$/.test(s)}},validationErrors:{validMobile:"Please enter right phone numbers."}}),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",onClick:this.getFormValues},"get form values"),b.a.createElement(q.a,{type:"primary",outline:!0,onClick:this.resetForm},"reset")))}}]),s}(b.a.Component),c=a()(p);return b.a.createElement(c,null)},B=function(){O.a.Field;var n=O.a.FormInputField,a=O.a.FormCheckboxGroupField,s=O.a.createForm,t=function(s){function t(){var n,a;i()(this,t);for(var s=arguments.length,e=new Array(s),p=0;p<s;p++)e[p]=arguments[p];return a=m()(this,(n=f()(t)).call.apply(n,[this].concat(e))),l()(o()(a),"state",{checkedList:[]}),l()(o()(a),"onCheckboxChange",function(n){a.setState({checkedList:n})}),l()(o()(a),"submit",function(n,a){E.a.success(JSON.stringify(n))}),l()(o()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return y()(t,s),k()(t,[{key:"render",value:function(){var s=this.props.handleSubmit;return b.a.createElement(O.a,{horizontal:!0,onSubmit:s(this.submit)},b.a.createElement(n,{name:"name",type:"text",label:"Name:",required:!0,helpDesc:"regular validation",validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"Please enter the name.",matchRegex:"Name can only be letters."}}),b.a.createElement(n,{name:"password",type:"text",label:"Password:",required:!0,helpDesc:"non-empty validation",validations:{required:!0},validationErrors:{required:"Please enter the password."}}),b.a.createElement(n,{name:"confirmPw",type:"text",label:"Comfirm password:",required:!0,helpDesc:"validations of comparing with other field",validations:{equalsField:"password"},validationErrors:{equalsField:"The password you enter the second time is not the same as the one you first filled in."}}),b.a.createElement(n,{name:"email",type:"text",label:"Email:",helpDesc:"validation of email",validations:{isEmail:!0},validationErrors:{isEmail:"Please enter the right email."}}),b.a.createElement(n,{name:"url",type:"text",label:"Personal website:",helpDesc:"validation of website link",validations:{isUrl:!0},validationErrors:{isUrl:"Please enter the right website link."}}),b.a.createElement(n,{name:"id",type:"text",label:"ID Number:",required:!0,helpDesc:"custom validations",validations:{matchRegex:/^\d+$/,format:function(n,a){return 15===a.length||10===a.length}},validationErrors:{matchRegex:"ID number can only be numbers.",format:"ID number is 10 or 15 digits."}}),b.a.createElement(a,{name:"hobbies",type:"text",label:"hobbies:",value:this.state.checkedList,onChange:this.onCheckboxChange,required:!0,helpDesc:"length validation",validations:{minLength:2},validationErrors:{minLength:"Please select at least two hobbies."}},b.a.createElement(j.a,{value:"movie"},"movie"),b.a.createElement(j.a,{value:"book"},"book"),b.a.createElement(j.a,{value:"travel"},"travel")),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit"},"submit"),b.a.createElement(q.a,{type:"primary",outline:!0,onClick:this.resetForm},"reset")))}}]),t}(b.a.Component),e=s()(t);return b.a.createElement(e,null)},M=function(){O.a.Field;var n=O.a.FormInputField,a=O.a.createForm,s=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return a=m()(this,(n=f()(s)).call.apply(n,[this].concat(e))),l()(o()(a),"submit",function(n){E.a.success(JSON.stringify(n))}),a}return y()(s,a),k()(s,[{key:"render",value:function(){var a=this.props,s=a.handleSubmit,t=a.zentForm;return b.a.createElement(O.a,{horizontal:!0,onSubmit:s(this.submit)},b.a.createElement(n,{name:"field1",type:"text",label:"Vaidate when field is changed:",validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"The value should be non-empty.",matchRegex:"The value can only be letters."}}),b.a.createElement(n,{name:"field2",type:"text",label:"Vaidate when field is out of focus:",validateOnChange:!1,validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"The value should be non-empty.",matchRegex:"The value can only be letters."}}),b.a.createElement(n,{name:"field3",type:"text",label:"Validate when form is submitted:",validateOnChange:!1,validateOnBlur:!1,validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"The value should be non-empty.",matchRegex:"The value can only be letters."}}),b.a.createElement(n,{name:"field4",type:"text",label:"Custom way of display error:",displayError:t.isFormSubmitFail()&&!!t.getFieldError("field4"),validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"The value should be non-empty.",matchRegex:"The value can only be letters."}}),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit"},"submit")))}}]),s}(b.a.Component),t=a()(s);return b.a.createElement(t,null)},U=function(){O.a.Field;var n=O.a.FormInputField,a=O.a.createForm,s=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return a=m()(this,(n=f()(s)).call.apply(n,[this].concat(e))),l()(o()(a),"asyncValidation",function(n,a){return new Promise(function(n,s){return setTimeout(function(){"pangxie"===a?s("pangxie is occupied."):n()},1e3)})}),l()(o()(a),"asyncValidation2",function(n,a){return new Promise(function(n,s){return setTimeout(function(){"pangxie2"===a?s("pangxie2 is occupied."):n()},1e3)})}),l()(o()(a),"submit",function(n){E.a.success(JSON.stringify(n))}),a}return y()(s,a),k()(s,[{key:"render",value:function(){var a=this.props,s=a.handleSubmit,t=a.zentForm.isSubmitting();return b.a.createElement(O.a,{horizontal:!0,onSubmit:s(this.submit)},b.a.createElement(n,{name:"name",type:"text",label:"name:",value:"pangxie",validations:{required:!0,matchRegex:/[a-zA-Z]+/},validationErrors:{required:"The value should be non-empty.",matchRegex:"The value should be characters."},asyncValidation:this.asyncValidation,helpDesc:"try to enter 'pangxie'"}),b.a.createElement(n,{name:"name2",type:"text",label:"name:",value:"pangxie2",asyncValidation:this.asyncValidation2,helpDesc:"try to enter 'pangxie2'"}),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit",loading:t},"submit")))}}]),s}(b.a.Component),t=a()(s);return b.a.createElement(t,null)},W=function(){O.a.Field;var n=O.a.FormInputField,a=O.a.createForm,s=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return a=m()(this,(n=f()(s)).call.apply(n,[this].concat(e))),l()(o()(a),"lower",function(n){return n&&n.toLowerCase()}),l()(o()(a),"upper",function(n){return n&&n.toUpperCase()}),a}return y()(s,a),k()(s,[{key:"render",value:function(){return b.a.createElement(O.a,{horizontal:!0},b.a.createElement(n,{name:"field1",type:"text",label:"To Lower:",value:"AAA",normalize:this.lower,format:this.lower}),b.a.createElement(n,{name:"field2",type:"text",label:"To Upper:",value:"bbb",normalize:this.upper,format:this.upper}))}}]),s}(b.a.Component),t=a()(s);return b.a.createElement(t,null)},L=function(){var n=O.a.FormInputField,a=O.a.createForm,s=O.a.SubmissionError;var t=function(a){function t(){var n,a;i()(this,t);for(var e=arguments.length,p=new Array(e),c=0;c<e;c++)p[c]=arguments[c];return a=m()(this,(n=f()(t)).call.apply(n,[this].concat(p))),l()(o()(a),"submit",function(n,a){return new Promise(function(n){return setTimeout(n,1e3)}).then(function(){if(10*Math.random()>4)throw a.setFieldExternalErrors({user:"This name is occupied."}),new s("This name is occupied.");return"Congratulations, the registration is successful!"})}),l()(o()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return y()(t,a),k()(t,[{key:"render",value:function(){var a=this.props,s=a.handleSubmit,t=a.zentForm.isSubmitting();return b.a.createElement(O.a,{onSubmit:s(this.submit),horizontal:!0},b.a.createElement(n,{name:"user",type:"text",label:"user name:",value:"111",validations:{required:!0},validationErrors:{required:"The user name should be non-empty."}}),b.a.createElement(n,{name:"password",type:"password",label:"password:",value:"222",validations:{required:!0},validationErrors:{required:"The password should be non-empty."}}),b.a.createElement(n,{name:"confirmPassword",type:"password",label:"Comfirm password:",value:"222",validations:{required:!0,isPasswordEqual:function(n,a){return n.password===a||"The password you enter the second time is not the same as the one you first filled in."}},validationErrors:{required:"The field should be non-empty."}}),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit",loading:t},"register"),b.a.createElement(q.a,{type:"primary",outline:!0,onClick:this.resetForm},"reset")))}}]),t}(b.a.Component),e=a()(t);return b.a.createElement(e,{scrollToError:!0,onSubmitFail:function(n){E.a.error(n)},onSubmitSuccess:function(n){E.a.success(n)}})},H=function(){O.a.Field;var n=O.a.FormInputField,a=O.a.createForm,s=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return a=m()(this,(n=f()(s)).call.apply(n,[this].concat(e))),l()(o()(a),"submit",function(n,a){E.a.success(JSON.stringify(n))}),l()(o()(a),"setError",function(){a.props.zentForm.setFieldExternalErrors({name:"The name can only be letters."})}),l()(o()(a),"initialize",function(){a.props.zentForm.initialize({name:"0",age:"0",password:"0"})}),l()(o()(a),"setFieldsValue",function(){a.props.zentForm.setFieldsValue({name:"3"})}),l()(o()(a),"reset",function(){a.props.zentForm.resetFieldsValue()}),a}return y()(s,a),k()(s,[{key:"render",value:function(){var a=this.props,s=a.handleSubmit,t=a.zentForm.isSubmitting();return b.a.createElement(O.a,{onSubmit:s(this.submit),horizontal:!0},b.a.createElement(n,{name:"name",type:"text",label:"name:",value:"1",validations:{required:!0},validationErrors:{required:"The name should be non-empty."}}),b.a.createElement(n,{name:"age",type:"text",label:"age:",value:"1",validations:{required:!0},validationErrors:{required:"The age should be non-empty."}}),b.a.createElement(n,{name:"password",type:"text",label:"password:",value:"1",validations:{required:!0},validationErrors:{required:"The password should be non-empty."}}),b.a.createElement(n,{name:"confirmPassword",type:"text",label:"Comfirm password:",value:"1",validations:{required:!0,isPasswordEqual:function(n,a){return n.password===a||"The password you enter the second time is not the same as the one you first filled in."}},validationErrors:{required:"The field should be non-empty."}}),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit",loading:t},"submit"),b.a.createElement(q.a,{type:"primary",outline:!0,onClick:this.initialize},"initialize"),b.a.createElement(q.a,{type:"primary",outline:!0,onClick:this.setFieldsValue},"set value"),b.a.createElement(q.a,{type:"primary",outline:!0,onClick:this.reset},"reset")))}}]),s}(b.a.Component),t=a()(s);return b.a.createElement(t,null)},G=function(){O.a.Field;var n=O.a.FormInputField,a=O.a.createForm,s=C.a.Group,t=function(a){function t(){var n,a;i()(this,t);for(var s=arguments.length,e=new Array(s),p=0;p<s;p++)e[p]=arguments[p];return a=m()(this,(n=f()(t)).call.apply(n,[this].concat(e))),l()(o()(a),"state",{formLayout:"vertical"}),l()(o()(a),"onRadioChange",function(n){a.setState({formLayout:n.target.value})}),l()(o()(a),"submit",function(n,a){E.a.success(JSON.stringify(n))}),a}return y()(t,a),k()(t,[{key:"render",value:function(){var a=this.state.formLayout,t=this.props.handleSubmit;return b.a.createElement("div",null,b.a.createElement(s,{value:a,onChange:this.onRadioChange,className:"form-layout"},b.a.createElement(C.a,{value:"vertical"},"vertical"),b.a.createElement(C.a,{value:"horizontal"},"horizontal"),b.a.createElement(C.a,{value:"inline"},"inline")),b.a.createElement(O.a,{inline:"inline"===a,horizontal:"horizontal"===a,onSubmit:t(this.submit)},b.a.createElement(n,{name:"name",type:"text",label:"name:",value:""}),b.a.createElement(n,{name:"name2",type:"text",label:"name2:",value:""}),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit"},"submit"))))}}]),t}(b.a.Component),e=a()(t);return b.a.createElement(e,null)},Y=function(){O.a.Field;var n=O.a.Fieldset,a=O.a.FormInputField,s=O.a.createForm,t=function(s){function t(){var n,a;i()(this,t);for(var s=arguments.length,e=new Array(s),p=0;p<s;p++)e[p]=arguments[p];return a=m()(this,(n=f()(t)).call.apply(n,[this].concat(e))),l()(o()(a),"submit",function(n,a){E.a.success(JSON.stringify(n))}),a}return y()(t,s),k()(t,[{key:"render",value:function(){var s=this.props.handleSubmit;return b.a.createElement(O.a,{horizontal:!0,onSubmit:s(this.submit)},b.a.createElement(n,{legend:"Fieldset1"},b.a.createElement(a,{name:"name",type:"text",label:"name:",value:""})),b.a.createElement(n,{legend:"Fieldset2"},b.a.createElement(a,{name:"name2",type:"text",label:"name2:",value:""})),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit"},"submit")))}}]),t}(b.a.Component),e=s()(t);return b.a.createElement(e,null)},$=function(){O.a.Field;var n=O.a.FormSection,a=O.a.FormInputField,s=O.a.createForm,t=function(n){function s(){return i()(this,s),m()(this,f()(s).apply(this,arguments))}return y()(s,n),k()(s,[{key:"render",value:function(){return b.a.createElement("div",null,b.a.createElement(a,{name:"streetName",label:"Street:",type:"text",validations:{required:!0,maxLength:5},validationErrors:{required:"The street should be non-empty.",maxLength:"The length of value exceeds the maximum length."}}),b.a.createElement(a,{name:"number",label:"House number:",type:"text",validations:{required:!0,minLength:6},validationErrors:{required:"The house number should be non-empty.",minLength:"The length of value is less than minimum length."}}),b.a.createElement(a,{name:"zipCode",label:"Zip code:",type:"text"}))}}]),s}(b.a.Component),e=function(s){function e(){return i()(this,e),m()(this,f()(e).apply(this,arguments))}return y()(e,s),k()(e,[{key:"render",value:function(){return b.a.createElement("div",null,b.a.createElement(a,{name:"name",label:"Name:",type:"text"}),b.a.createElement(a,{name:"mobile",label:"Mobile:",type:"text"}),b.a.createElement(n,{name:"address"},b.a.createElement(t,null)))}}]),e}(b.a.Component),p=function(s){function t(){var n,a;i()(this,t);for(var s=arguments.length,e=new Array(s),p=0;p<s;p++)e[p]=arguments[p];return a=m()(this,(n=f()(t)).call.apply(n,[this].concat(e))),l()(o()(a),"submit",function(n,a){E.a.success(JSON.stringify(n))}),l()(o()(a),"setError",function(){a.props.zentForm.setFieldExternalErrors({orderNo:"The order number is wrong.",buyer:{mobile:["The mobile is wrong.","test"]},recipient:{address:{zipCode:"The format of the zip code is incorrect."},mobile:"The mobile needs to be refilled."}})}),l()(o()(a),"initialize",function(){a.props.zentForm.initialize({orderNo:"E1111111",buyer:{mobile:13423532345,name:"Allen",address:{number:14234,zipCode:2222}},recipient:{mobile:13245343533,name:"Selina",address:{number:14234,zipCode:2222}}})}),l()(o()(a),"setFieldsValue",function(){a.props.zentForm.setFieldsValue({orderNo:"E143423",buyer:{name:"Sherldon",address:{number:1111111,zipCode:11111}},recipient:{name:"Leonard",address:{number:11111,zipCode:1111}}})}),l()(o()(a),"reset",function(){a.props.zentForm.resetFieldsValue()}),a}return y()(t,s),k()(t,[{key:"render",value:function(){var s=this.props.handleSubmit;return b.a.createElement(O.a,{horizontal:!0,onSubmit:s(this.submit)},b.a.createElement(a,{name:"orderNo",label:"Order Number:",type:"text"}),b.a.createElement(n,{name:"buyer"},b.a.createElement("div",{className:"sec-label"},"Buyer Info"),b.a.createElement(e,null)),b.a.createElement(n,{name:"recipient"},b.a.createElement("div",{className:"sec-label"},"Recipient Info"),b.a.createElement(e,null)),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit"},"submit"),b.a.createElement(q.a,{type:"primary",onClick:this.setError},"set extra errors"),b.a.createElement(q.a,{type:"primary",onClick:this.initialize},"initialize"),b.a.createElement(q.a,{type:"primary",onClick:this.setFieldsValue},"set value"),b.a.createElement(q.a,{type:"primary",onClick:this.reset},"reset")))}}]),t}(b.a.Component),c=s()(p);return b.a.createElement(c,null)},J=function(){O.a.Field;var n=O.a.FormInputField,a=O.a.FormRadioGroupField,s=O.a.createForm,t=O.a.FormSection,e=O.a.FieldArray,p=function(a){function s(){return i()(this,s),m()(this,f()(s).apply(this,arguments))}return y()(s,a),k()(s,[{key:"render",value:function(){var a=this.props.fields;return b.a.createElement("ul",null,b.a.createElement(q.a,{onClick:function(){return a.push()},className:"add-btn"},"Add hobby"),a.map(function(s,t,e){return b.a.createElement("li",{className:"hobbies",key:"hobby".concat(e)},b.a.createElement(n,{name:"".concat(s),type:"text",label:"Hobby".concat(t+1,":"),validations:{required:!0},validationErrors:{required:"Please enter the hobby."}}),b.a.createElement("span",{className:"del-btn",onClick:function(){return a.remove(t)}},"Delete hobby"))}))}}]),s}(b.a.Component),c=function(s){function t(){return i()(this,t),m()(this,f()(t).apply(this,arguments))}return y()(t,s),k()(t,[{key:"render",value:function(){var s=this.props,t=s.fields,o=s.index;return b.a.createElement("li",{className:"members"},b.a.createElement("div",{className:"member-title"},b.a.createElement("span",null,"Member",o+1),b.a.createElement(w.a,{centerArrow:!0,trigger:"hover",content:"Delete member"},b.a.createElement(x.a,{className:"del-btn",type:"close-circle",onClick:function(){return t.remove(o)}}))),b.a.createElement(n,{name:"name",type:"text",label:"Name:",required:!0,validations:{required:!0},validationErrors:{required:"Please enter the name of member."}}),b.a.createElement(a,{name:"sex",label:"Sex:",required:!0,validations:{required:function(n,a){return""!==a}},validationErrors:{required:"Please select the sex of member."}},b.a.createElement(C.a,{value:"1"},"male"),b.a.createElement(C.a,{value:"2"},"female")),b.a.createElement(e,{name:"hobbies",component:p}))}}]),t}(b.a.Component),u=function(n){function a(){var n,s;i()(this,a);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return s=m()(this,(n=f()(a)).call.apply(n,[this].concat(e))),l()(o()(s),"addOne",function(){s.props.fields.push({})}),l()(o()(s),"addTwo",function(){s.props.fields.push({name:"john",sex:"1",hobbies:["H1","h4","h6"]}),s.props.fields.push({})}),s}return y()(a,n),k()(a,[{key:"render",value:function(){var n=this.props.fields;return b.a.createElement("ul",null,n.length<3&&b.a.createElement(q.a,{onClick:this.addOne,className:"add-btn"},"Add one member"),n.length<2&&b.a.createElement(q.a,{onClick:this.addTwo,className:"add-btn"},"Add two members"),n.map(function(a,s,e){return b.a.createElement(t,{name:a,key:"member".concat(e)},b.a.createElement(c,{fields:n,index:s}))}))}}]),a}(b.a.Component),r=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return a=m()(this,(n=f()(s)).call.apply(n,[this].concat(e))),l()(o()(a),"submit",function(n,a){E.a.success(JSON.stringify(n))}),l()(o()(a),"setArray",function(){a.props.zentForm.setFieldsValue({number:42,members:[{name:"john",sex:"1",hobbies:["H1"]}]})}),a}return y()(s,a),k()(s,[{key:"componentDidMount",value:function(){this.props.zentForm.initialize({number:233,members:[{name:"john",sex:"1",hobbies:["HH2"]},{}]})}},{key:"render",value:function(){var a=this.props.handleSubmit;return b.a.createElement(O.a,{horizontal:!0,onSubmit:a(this.submit),className:"demo-form"},b.a.createElement(n,{name:"number",type:"text",label:"Total number:",required:!0,validations:{required:!0},validationErrors:{required:"Please enter the total number of the family."}}),b.a.createElement(e,{name:"members",component:u}),b.a.createElement("div",{className:"zent-form__form-actions"},b.a.createElement(q.a,{type:"primary",htmlType:"submit"},"submit"),b.a.createElement(q.a,{onClick:this.setArray},"Set FieldArray")))}}]),s}(b.a.Component),d=s()(r);return b.a.createElement(d,null)};function Z(n){return b.a.createElement(n.tag,e()({},n.attributes,{dangerouslySetInnerHTML:{__html:n.html}}))}function K(n){return b.a.createElement(Z,{tag:"section",html:n.html,attributes:{className:"zandoc-react-markdown"}})}function Q(n){return b.a.createElement(Z,{tag:"style",html:n.style})}var X=function(n){function a(){var n,s;i()(this,a);for(var t=arguments.length,e=new Array(t),p=0;p<t;p++)e[p]=arguments[p];return s=m()(this,(n=f()(a)).call.apply(n,[this].concat(e))),l()(o()(s),"state",{showCode:!1}),l()(o()(s),"toggle",function(){s.setState({showCode:!s.state.showCode})}),s}return y()(a,n),k()(a,[{key:"render",value:function(){var n=this.state.showCode,a=this.props,s=a.title,t=a.src,e=a.children;return b.a.createElement("div",{className:"zandoc-react-demo"},b.a.createElement("div",{className:"zandoc-react-demo__preview"},e),b.a.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},b.a.createElement("div",{className:"zandoc-react-demo__title"},b.a.createElement("p",null,s||"")),b.a.createElement("i",{className:"zenticon zenticon-caret-up zandoc-react-demo__toggle ".concat(n?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")})),n&&b.a.createElement("pre",{className:"zandoc-react-demo__code"},b.a.createElement(Z,{tag:"code",html:t,attributes:{className:"language-jsx"}})))}}]),a}(v.Component),nn=function(n){function a(){return i()(this,a),m()(this,f()(a).apply(this,arguments))}return y()(a,n),k()(a,[{key:"componentDidMount",value:function(){var n=location.hash;if(n){var a=document.querySelector('a[href="'.concat(n,'"]'));a&&Object(F.a)(document.documentElement,0,function n(a,s){for(;a;)return a.offsetTop&&"static"!==getComputedStyle(a).position&&(s+=a.offsetTop),n(a.parentNode,s);return s}(a,-9))}}},{key:"render",value:function(){return b.a.createElement("div",{className:"zandoc-react-container",key:null},b.a.createElement(Q,{style:".zent-form__controls .zent-switch-small {\n\tmargin-top: 5px;\n}\n\n.form-layout {\n\tmargin-bottom: 30px;\n}\n\n.sec-label {\n\tcolor: #666;\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n\tpadding-bottom: 5px;\n}\n\n.add-btn {\n\tmargin-left: 130px;\n}\n\n.demo-form .members {\n\t\tborder: 1px dashed #ccc;\n\t\tmargin: 20px 0;\n\t\tpadding: 10px 0;\n\t\tposition: relative;\n\t}\n\n.demo-form .members .del-btn {\n\t\t\tcolor: #666;\n\t\t\tcursor: pointer;\n\t\t\tposition: absolute;\n\t\t\tright: -8px;\n\t\t\ttop: -8px;\n\t\t}\n\n.demo-form .member-title{\n\t\tmargin: 0 10px;\n\t}\n\n.demo-form .hobbies {\n\t\tmargin-top: 20px;\n\t\tposition: relative;\n\t}\n\n.demo-form .hobbies .del-btn {\n\t\t\tcolor: #38f;\n\t\t\tcursor: pointer;\n\t\t\tfont-size: 12px;\n\t\t\tposition: absolute;\n\t\t\ttop: 6px;\n\t\t\tleft: 300px;\n\t\t}\n\n.demo-form .hobby-title {\n\t\tmargin: 10px 0 5px;\n\t}\n\n.demo-form .zenticon {\n\t\tmargin-left: 10px;\n\t}"}),b.a.createElement(K,{html:'<h2 class="anchor-heading"><a href="#form">¶</a><a href="javascript:void(0)" id="form" class="anchor-point"></a>Form</h2>\n<ol>\n<li><a href="#guides">Guides</a></li>\n<li><a href="#the-validations-of-form">The validations of form</a></li>\n<li><a href="#the-format-of-value">The format of value</a></li>\n<li><a href="#the-operations-of-form">The operations of form</a></li>\n<li><a href="#others">Others</a></li>\n<li><a href="#the-internal-realization-of-fo">The internal realization of form</a></li>\n<li><a href="#other-instructions">Other instructions</a></li>\n<li><a href="#api">API</a></li>\n</ol>\n<h3 class="anchor-heading"><a href="#guides">¶</a><a href="javascript:void(0)" id="guides" class="anchor-point"></a>Guides</h3>\n<h4 class="anchor-heading"><a href="#form">¶</a><a href="javascript:void(0)" id="form" class="anchor-point"></a><code>Form</code></h4>\n<ul>\n<li><code>Form</code> provides three kind of layouts: <code>inline</code>，<code>horizontal</code>， <code>vertical</code>.</li>\n<li>To use the <code>Form</code> component, you must first wrap it with <code>createForm</code> method, which will inject <code>zentForm</code> into the form and provide various operations of field and form. See more details in demos and <a href="#zentform"><code>zentForm</code> API</a>.</li>\n</ul>\n<h4 class="anchor-heading"><a href="#field">¶</a><a href="javascript:void(0)" id="field" class="anchor-point"></a><code>Field</code></h4>\n<p>The <code>Field</code> component is essentially an ancillary component that only manages information such as the life cycle of the field\'s value and the error of the field. It does not provide any style.</p>\n<ul>\n<li>Property <code>name</code> is required when using <code>Field</code>;</li>\n<li>\n<p>The representation of <code>Field</code> is determined by the component passed in by proptery <code>component</code>. In addition, <code>Form</code> provides several common field components. You can use custom field component packaged by yourself.</p>\n<ul>\n<li><code>FormInputField</code></li>\n<li><code>FormSelectField</code></li>\n<li><code>FormRadioGroupField</code></li>\n<li><code>FormCheckboxField</code></li>\n<li><code>FormCheckboxGroupField</code></li>\n<li><code>FormNumberInputField</code></li>\n<li><code>FormSwitchField</code></li>\n<li><code>FormColorPickerField</code></li>\n<li><code>FormDatePickerField</code></li>\n<li><code>FormWeekPickerField</code></li>\n<li><code>FormMonthPickerField</code></li>\n<li><code>FormQuarterPickerField</code></li>\n<li><code>FormYearPickerField</code></li>\n<li><code>FormTimePickerField</code></li>\n<li><code>FormTimeRangePickerField</code></li>\n<li><code>FormDateRangePickerField</code></li>\n<li><code>FormDateRangeQuickPickerField</code></li>\n</ul>\n</li>\n<li><code>Form</code> also provides the <code>getControlGroup</code> method for quickly packaging custom field component. See more details in the demos and the <a href="#form-getcontrolgroup"><code>getControlGroup</code> API</a>.</li>\n</ul>\n<p>Note: The name of the <code>format</code> prop in date related picker components is changed to <code>dateFormat</code> because it conflicts with the <code>format</code> prop in <code>Field</code>. And <code>format</code> in <code>FormTimePickerField</code> and <code>FormTimeRangePickerField</code> is changed to <code>timeFormat</code>.</p>'}),b.a.createElement(X,{title:"Basic usage",id:"Demobasic",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Icon</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Pop</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n              <span class="token maybe-class-name">User</span> <span class="token maybe-class-name">Name</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Pop</span></span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>User name is used for personal login.<span class="token punctuation">"</span></span> <span class="token attr-name">centerArrow</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>error-circle-o<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Pop</span></span><span class="token punctuation">></span></span><span class="token operator">:</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">}</span></span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>User name is 5-25 characters.<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Password:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">helpDesc</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n              <span class="token maybe-class-name">The</span> password consists <span class="token keyword">of</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">20</span> letters or numbers<span class="token punctuation">.</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://youzan.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token maybe-class-name">Watch</span> more<span class="token punctuation">.</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">}</span></span>\n          <span class="token attr-name">notice</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Notice that user name and password cannot be modified after submitting. Please submit carefully.<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FieldForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},b.a.createElement(V)),b.a.createElement(X,{title:"Use build-in field components",id:"Demobuildinfield",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Radio</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Checkbox</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Button</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormSelectField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormRadioGroupField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormCheckboxField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormCheckboxGroupField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormColorPickerField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormDateRangePickerField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormDateRangeQuickPickerField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormNumberInputField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormSwitchField</span><span class="token punctuation">,</span>\n  createForm<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    checkedList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onCheckboxChange</span> <span class="token operator">=</span> <span class="token parameter">checkedList</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> checkedList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> zentForm</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">zentForm</span><span class="token punctuation">.</span><span class="token method function property-access">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">spellCheck</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'Please enter the name.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormSelectField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Type:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n            <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">\'Volumn\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">\'VIP\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'Please choose the type.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormRadioGroupField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gender:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token function">required</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> value <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'Please choose sex.\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token maybe-class-name">Male</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token maybe-class-name">Female</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormRadioGroupField</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormCheckboxGroupField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hobbies:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">checkedList</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onCheckboxChange</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            minLength<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            minLength<span class="token operator">:</span> <span class="token string">\'Please choose hobbies.\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Checkbox</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>movie<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token maybe-class-name">Movie</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Checkbox</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Checkbox</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token maybe-class-name">Book</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Checkbox</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Checkbox</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>travel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token maybe-class-name">Travel</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Checkbox</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormCheckboxGroupField</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormNumberInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Age:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">showStepper</span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormColorPickerField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Favourite color:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#5197FF<span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormDateRangePickerField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dateRange<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Validity period:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>split<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">dateFormat</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>YYYY-MM-DD HH:mm:ss<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token function">required</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'Please select the dateRange\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormDateRangeQuickPickerField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dateQuickRange<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Time Range:<span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormSwitchField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isPublic<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Public information:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormCheckboxField</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>All permissions:<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          agree\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormCheckboxField</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            submit\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">resetForm</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            reset\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scrollToError<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FieldForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},b.a.createElement(P)),b.a.createElement(K,{html:'<h4 class="anchor-heading"><a href="#package-custom-field-using-get">¶</a><a href="javascript:void(0)" id="package-custom-field-using-get" class="anchor-point"></a>Package custom field using <code>getControlGroup</code></h4>'}),b.a.createElement(X,{title:"Package custom field component using getControlGroup",id:"Democutomfield",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">NumberInput</span><span class="token punctuation">,</span> <span class="token maybe-class-name">ColorPicker</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Switch</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Upload</span><span class="token punctuation">,</span> <span class="token maybe-class-name">DateRangePicker</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> omit <span class="token keyword module">from</span> <span class="token string">\'lodash/omit\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> createForm<span class="token punctuation">,</span> getControlGroup<span class="token punctuation">,</span> unknownProps <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UploadWrap</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">wrappedOnChange</span> <span class="token operator">=</span> <span class="token parameter">imgs</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token method function property-access">onChange</span><span class="token punctuation">(</span>imgs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> passableProps <span class="token operator">=</span> <span class="token function">omit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">,</span> unknownProps<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">passableProps</span><span class="token punctuation">}</span></span> <span class="token attr-name">onUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">wrappedOnChange</span><span class="token punctuation">}</span></span> <span class="token attr-name">localOnly</span> <span class="token punctuation">/></span></span>\n        <span class="token punctuation">{</span>value <span class="token operator">&amp;&amp;</span>\n          value<span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">(</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>\n                <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span>\n                <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span>\n                <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span>\n                <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span><span class="token property-access">src</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token operator">:</span> <span class="token string">\'10px\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n              <span class="token punctuation">/></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">UploadField</span> <span class="token operator">=</span> <span class="token function">getControlGroup</span><span class="token punctuation">(</span><span class="token maybe-class-name">UploadWrap</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">updateLocalImage</span> <span class="token operator">=</span> <span class="token parameter">data</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> zentForm</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">zentForm</span><span class="token punctuation">.</span><span class="token method function property-access">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Field</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgs<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>materials:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token maybe-class-name">UploadField</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">maxSize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">triggerInline</span>\n          <span class="token attr-name">tips</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Recommended size：640 x 640 pixels<span class="token punctuation">"</span></span>\n          <span class="token attr-name">onUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">updateLocalImage</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            submit\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">resetForm</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            reset\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FieldForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},b.a.createElement(_)),b.a.createElement(K,{html:'<h4 class="anchor-heading"><a href="#package-multiple-elements">¶</a><a href="javascript:void(0)" id="package-multiple-elements" class="anchor-point"></a>Package multiple elements</h4>\n<p>When a <code>Field</code> needs to contains multiple elements, it is recommended to assemble the values of multiple elements into one object and passed it to the <code>Field</code> component. When using <code>getControlGroup</code> is not possible to satisfy your package requirements, you can wrap the component yourself and change the value of the field by calling the <code>onChange</code> function passed in by the <code>Field</code> component.</p>\n<p>⚠️Ps：Calling the <code>onChange</code> function passed in by <code>Field</code> will override the original value. You can pass the second parameter as <code>{merge: true}</code> to <code>onChange</code> function, which will partially override the original value.</p>'}),b.a.createElement(X,{title:"Package multiple form elements",id:"Demomultivalue",src:'<span class="token keyword module">import</span> cx <span class="token keyword module">from</span> <span class="token string">\'classnames\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Select</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Input</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">SelectTrigger</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Select</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> countyCodeList <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    code<span class="token operator">:</span> <span class="token string">\'+86\'</span><span class="token punctuation">,</span>\n    zh<span class="token operator">:</span> <span class="token string">\'zhongguo\'</span><span class="token punctuation">,</span>\n    eng<span class="token operator">:</span> <span class="token string">\'china\'</span><span class="token punctuation">,</span>\n    value<span class="token operator">:</span> <span class="token string">\'China +86\'</span><span class="token punctuation">,</span>\n    index<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    code<span class="token operator">:</span> <span class="token string">\'+853\'</span><span class="token punctuation">,</span>\n    zh<span class="token operator">:</span> <span class="token string">\'aomen\'</span><span class="token punctuation">,</span>\n    eng<span class="token operator">:</span> <span class="token string">\'Macau\'</span><span class="token punctuation">,</span>\n    value<span class="token operator">:</span> <span class="token string">\'China Macau +853\'</span><span class="token punctuation">,</span>\n    index<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">ContactPhone</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">onSelectChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> selectedItem</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> newValue <span class="token operator">=</span> <span class="token punctuation">{</span>\n      areacode<span class="token operator">:</span> selectedItem<span class="token punctuation">.</span><span class="token property-access">index</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token comment">// rewrite part of value</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token method function property-access">onChange</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> <span class="token punctuation">{</span> merge<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onPhoneChange</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> newValue <span class="token operator">=</span> <span class="token known-class-name class-name">Object</span><span class="token punctuation">.</span><span class="token method function property-access">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      mobile<span class="token operator">:</span> e<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token method function property-access">onChange</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">filterHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> keyword</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      keyword <span class="token operator">&amp;&amp;</span>\n      item<span class="token punctuation">.</span><span class="token property-access">text</span>\n        <span class="token punctuation">.</span><span class="token method function property-access">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token method function property-access">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token method function property-access">indexOf</span><span class="token punctuation">(</span>keyword<span class="token punctuation">.</span><span class="token method function property-access">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> displayError <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> showError <span class="token operator">=</span>\n      displayError <span class="token operator">===</span> <span class="token keyword nil">undefined</span>\n        <span class="token operator">?</span> props<span class="token punctuation">.</span><span class="token property-access">isDirty</span> <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span><span class="token property-access">error</span> <span class="token operator">!==</span> <span class="token keyword null nil">null</span>\n        <span class="token operator">:</span> displayError<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> helpDesc <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token property-access">helpDesc</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> mobileClassName <span class="token operator">=</span> <span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token string">\'zent-form__control-group\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string">\'has-error\'</span><span class="token operator">:</span> showError<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mobileClassName<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token maybe-class-name">Contact</span> <span class="token maybe-class-name">Phone</span><span class="token operator">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token operator">:</span> <span class="token string">\'flex\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Select</span></span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>areacode<span class="token punctuation">"</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">.</span><span class="token property-access">areacode</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span><span class="token property-access">areadata</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">filter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">filterHandler</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">optionValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>\n              <span class="token attr-name">optionText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span>\n              <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token maybe-class-name">SelectTrigger</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onSelectChange</span><span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone-num<span class="token punctuation">"</span></span>\n              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter your phone<span class="token punctuation">"</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">.</span><span class="token property-access">mobile</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onPhoneChange</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">160</span><span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>showError <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__error-desc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span><span class="token property-access">error</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n          <span class="token punctuation">{</span>helpDesc <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__help-desc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>helpDesc<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">CustomFieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">getFormValues</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>zentForm<span class="token punctuation">.</span><span class="token method function property-access">getFormValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">zentForm</span><span class="token punctuation">.</span><span class="token method function property-access">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span><span class="token maybe-class-name">Field</span>\n          name<span class="token operator">=</span><span class="token string">"contactPhone"</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            areacode<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            mobile<span class="token operator">:</span> <span class="token number">15899776666</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          areadata<span class="token operator">=</span><span class="token punctuation">{</span>countyCodeList<span class="token punctuation">}</span>\n          component<span class="token operator">=</span><span class="token punctuation">{</span><span class="token maybe-class-name">ContactPhone</span><span class="token punctuation">}</span>\n          helpDesc<span class="token operator">=</span><span class="token string">"Only phone numbers of China mainland and Macau are supported now."</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token function">validMobile</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">let</span> mobile <span class="token operator">=</span> <span class="token operator">+</span>value<span class="token punctuation">.</span><span class="token property-access">mobile</span><span class="token punctuation">;</span>\n              <span class="token keyword">let</span> mobileReg <span class="token operator">=</span> <span class="token regex">/^\\d{1,10}$/</span><span class="token punctuation">;</span>\n              <span class="token keyword">return</span> mobileReg<span class="token punctuation">.</span><span class="token method function property-access">test</span><span class="token punctuation">(</span>mobile<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> validMobile<span class="token operator">:</span> <span class="token string">\'Please enter right phone numbers.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">getFormValues</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token keyword">get</span> form values\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">resetForm</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            reset\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">CustomFieldForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},b.a.createElement(R)),b.a.createElement(K,{html:'<h3 class="anchor-heading"><a href="#the-validations-of-form">¶</a><a href="javascript:void(0)" id="the-validations-of-form" class="anchor-point"></a>The validations of form</h3>\n<h4 class="anchor-heading"><a href="#the-usage-of-form-validations">¶</a><a href="javascript:void(0)" id="the-usage-of-form-validations" class="anchor-point"></a>The usage of form validations</h4>\n<ul>\n<li>The <code>Field</code> component supports passing <code>validations</code> and <code>validationErrors</code> to specify the validation rules and validation prompts;</li>\n<li><code>validations</code> provides several internal validation rules(See more detail in section <a href="#built-in-validation-rules">Built-in validation rules</a>. It also supports custom validation function. See details below.</li>\n<li>Internal validation rules can be extended through using <code>Form.createForm</code>, which is explained in <a href="#form-createform"><code>Form.createForm</code> API</a> 。</li>\n<li>When any field is validated, all of the other fields will be validated. If you want to change this default behavior, you can set the <code>relatedFields</code> property of <code>Field</code> as an array of fields\' names so that when the current field is validated, only those specified fields will be valiated.</li>\n</ul>\n<p>Custom form validation function:</p>\n<p><code>function validate(formValues, fieldValue): string | boolean</code></p>\n<ul>\n<li>If validate returns <code>boolean</code>, <code>true</code> means validation is passed; <code>false</code> means validation is failed, in this case it must be used together with a corresponding key in <code>validationErrors</code>.</li>\n<li>Or the validate function may return a <code>string</code> directly, in this case, <code>validationErrors</code> is not used.</li>\n</ul>'}),b.a.createElement(X,{title:"Common valiations of form",id:"Demovalidate",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Radio</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Checkbox</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormCheckboxGroupField</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    checkedList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onCheckboxChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">checkedList</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> checkedList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> zentForm</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">zentForm</span><span class="token punctuation">.</span><span class="token method function property-access">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>regular validation<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'Please enter the name.\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token string">\'Name can only be letters.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Password:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>non-empty validation<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'Please enter the password.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>confirmPw<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Comfirm password:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>validations of comparing with other field<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            equalsField<span class="token operator">:</span> <span class="token string">\'password\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            equalsField<span class="token operator">:</span> <span class="token string">\'The password you enter the second time is not the same as the one you first filled in.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>validation of email<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            isEmail<span class="token operator">:</span> <span class="token boolean">true</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            isEmail<span class="token operator">:</span> <span class="token string">\'Please enter the right email.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Personal website:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>validation of website link<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            isUrl<span class="token operator">:</span> <span class="token boolean">true</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            isUrl<span class="token operator">:</span> <span class="token string">\'Please enter the right website link.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ID Number:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom validations<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            matchRegex<span class="token operator">:</span> <span class="token regex">/^\\d+$/</span><span class="token punctuation">,</span>\n            <span class="token function">format</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token property-access">length</span> <span class="token operator">===</span> <span class="token number">15</span> <span class="token operator">||</span> value<span class="token punctuation">.</span><span class="token property-access">length</span> <span class="token operator">===</span> <span class="token number">10</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            matchRegex<span class="token operator">:</span> <span class="token string">\'ID number can only be numbers.\'</span><span class="token punctuation">,</span>\n            format<span class="token operator">:</span> <span class="token string">\'ID number is 10 or 15 digits.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormCheckboxGroupField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">checkedList</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onCheckboxChange</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>length validation<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            minLength<span class="token operator">:</span> <span class="token number">2</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            minLength<span class="token operator">:</span> <span class="token string">\'Please select at least two hobbies.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Checkbox</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>movie<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>movie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Checkbox</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Checkbox</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>book<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Checkbox</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Checkbox</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>travel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>travel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Checkbox</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormCheckboxGroupField</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">resetForm</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FieldForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},b.a.createElement(B)),b.a.createElement(K,{html:'<h4 class="anchor-heading"><a href="#different-timing-when-the-vali">¶</a><a href="javascript:void(0)" id="different-timing-when-the-vali" class="anchor-point"></a>Different timing when the validations are triggered</h4>\n<p>The default timing of validations is when the value of field changes. You can change the timing when the validation is triggered by specifing <code>validateOnChange</code>, <code>validateOnBlur</code>. For example, the field will trigger the validation in blur when set <code>validateOnChange</code> to be <code>false</code> and <code>validateOnBlur</code> to be <code>true</code>. Notice that these property are typically for input fields.</p>\n<p>If you want to validate the form when submitting, yoy should set <code>validateOnChange</code> and <code>validateOnBlur</code> to be <code>false</code> and the built-in <code>handleSubmit</code> method to submit the form。If you don\'t want to use <code>handleSubmit</code>, you should use <code>zentForm.validateForm(true, callback)</code> to tigger the validations of form by yourself and deal with the submitting logic in <code>callback</code>. If you want to determine the show logic of error messages, you can set the property <code>displayError</code> of the field.</p>'}),b.a.createElement(X,{title:"Different time when the validation is triggered.",id:"Demovalidatetime",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FormattedForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit<span class="token punctuation">,</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>field1<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vaidate when field is changed:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'The value should be non-empty.\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token string">\'The value can only be letters.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>field2<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vaidate when field is out of focus:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validateOnChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'The value should be non-empty.\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token string">\'The value can only be letters.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>field3<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Validate when form is submitted:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validateOnChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validateOnBlur</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'The value should be non-empty.\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token string">\'The value can only be letters.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>field4<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Custom way of display error:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">displayError</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>zentForm<span class="token punctuation">.</span><span class="token method function property-access">isFormSubmitFail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>zentForm<span class="token punctuation">.</span><span class="token method function property-access">getFieldError</span><span class="token punctuation">(</span><span class="token string">\'field4\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'The value should be non-empty.\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token string">\'The value can only be letters.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FormattedForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},b.a.createElement(M)),b.a.createElement(K,{html:'<h4 class="anchor-heading"><a href="#asynchronous-validations">¶</a><a href="javascript:void(0)" id="asynchronous-validations" class="anchor-point"></a>Asynchronous validations</h4>\n<p>Asynchronous validations is usually triggered on blur. If you need to manually trigger asynchronous validations in a custom component, you need to call <code>props.onBlur (event)</code> yourself.  <code>value</code> can be passed to the function directly as the <code>event</code> parameter or an attribute of <code>event</code>.</p>\n<p>If you submit a form without operating the fields that have asynchronous validations, these asynchronous validations will not be triggered by default. Using the built-in <code>handleSubmit</code> method for submitting will help to trigger the asynchronous verifications which have never been triggered. If you don\'t want to use <code>handleSubmit</code> method, you should use the <code>zentForm.isFormAsyncValidated</code> method to judge wheather the form has been asynchronous validated. Depending on the result, you should choose whether to use the <code>zentForm.asyncValidateForm (resolve, reject)</code> method to force the asynchronous validations of the form.</p>'}),b.a.createElement(X,{title:"Asynchronous validation",id:"Demoasyncvalidate",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">AsyncForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit<span class="token punctuation">,</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> isSubmitting <span class="token operator">=</span> zentForm<span class="token punctuation">.</span><span class="token method function property-access">isSubmitting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pangxie<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token regex">/[a-zA-Z]+/</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'The value should be non-empty.\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token operator">:</span> <span class="token string">\'The value should be characters.\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">asyncValidation</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">asyncValidation</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>try to enter <span class="token punctuation">\'</span>pangxie<span class="token punctuation">\'</span><span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name2<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pangxie2<span class="token punctuation">"</span></span>\n          <span class="token attr-name">asyncValidation</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">asyncValidation2</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>try to enter <span class="token punctuation">\'</span>pangxie2<span class="token punctuation">\'</span><span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isSubmitting<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            submit\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">asyncValidation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token string">\'pangxie\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'pangxie is occupied.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">asyncValidation2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token string">\'pangxie2\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'pangxie2 is occupied.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token parameter">values</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">AsyncForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},b.a.createElement(U)),b.a.createElement(K,{html:'<h3 class="anchor-heading"><a href="#the-format-of-value">¶</a><a href="javascript:void(0)" id="the-format-of-value" class="anchor-point"></a>The format of <code>value</code></h3>\n<p>The <code>Form</code> component provides<code>format</code> and <code>nomalize</code> methods for formatting<code>value</code>. The timing of their implementation is detailed in <a href="#the-life-circle-of-value-in-fi">The life-circle of value in Field</a>。</p>'}),b.a.createElement(X,{title:"Format value",id:"Demoformat",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FormattedForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">lower</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> value <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token method function property-access">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">upper</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> value <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token method function property-access">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>field1<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>To Lower:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AAA<span class="token punctuation">"</span></span>\n          <span class="token attr-name">normalize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">lower</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">format</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">lower</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>field2<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>To Upper:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bbb<span class="token punctuation">"</span></span>\n          <span class="token attr-name">normalize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">upper</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">format</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">upper</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FormattedForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},b.a.createElement(W)),b.a.createElement(K,{html:'<h3 class="anchor-heading"><a href="#the-operations-of-form">¶</a><a href="javascript:void(0)" id="the-operations-of-form" class="anchor-point"></a>The operations of form</h3>\n<ul>\n<li><code>Form.createForm</code> helps injecting the <code>zentForm</code> property into a component, which providing various methods for manipulating form and field, such as getting the values of form, resetting the values and so on. See more details in <a href="#zentform">zenForm API</a>;</li>\n<li>The submission process of form, which is the function <code>handleSubmit</code>, is also encapsulated in <code>Form</code> component. You can encapsulate the asynchronous commit process in a function and <strong>return a Promise object </strong>. Then <code>Form</code> components will call the <code>onSubmitSuccess</code> method and the <code>onSubmitFail</code> methods according to the results of the Promise object and maintains the updates of the <code>isSubmitting</code> property (<code>isSubmitting</code> is available via <code>zentForm.isSubmitting ()</code>). Otherwise, the form will scroll to the first error field automatically when submitting by setting the property <code>srcollToError</code>.</li>\n</ul>'}),b.a.createElement(X,{title:"Submit the form and deal with the result",id:"Demosubmit",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Button</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> createForm<span class="token punctuation">,</span> <span class="token known-class-name class-name">SubmissionError</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">onSubmitFail</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">onSubmitSuccess</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SubmitForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> zentForm</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> promise<span class="token punctuation">.</span><span class="token method function property-access">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> random <span class="token operator">=</span> <span class="token known-class-name class-name">Math</span><span class="token punctuation">.</span><span class="token method function property-access">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>random <span class="token operator">></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        zentForm<span class="token punctuation">.</span><span class="token method function property-access">setFieldExternalErrors</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          user<span class="token operator">:</span> <span class="token string">\'This name is occupied.\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// You can throw a SubmissionError to deal with the error in the onSubmitFail function. Otherwise, you can use alert to show the error message directly.</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SubmissionError</span><span class="token punctuation">(</span><span class="token string">\'This name is occupied.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// You can pass the return value to the onSubmitSuccess function. Otherwise, you can hanle the successful result directly.</span>\n        <span class="token keyword">return</span> <span class="token string">\'Congratulations, the registration is successful!\'</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n\n    zentForm<span class="token punctuation">.</span><span class="token method function property-access">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit<span class="token punctuation">,</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> isSubmitting <span class="token operator">=</span> zentForm<span class="token punctuation">.</span><span class="token method function property-access">isSubmitting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user name:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'The user name should be non-empty.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>222<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'The password should be non-empty.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token operator">&lt;</span><span class="token maybe-class-name">FormInputField</span>\n          name<span class="token operator">=</span><span class="token string">"confirmPassword"</span>\n          type<span class="token operator">=</span><span class="token string">"password"</span>\n          label<span class="token operator">=</span><span class="token string">"Comfirm password:"</span>\n          value<span class="token operator">=</span><span class="token string">"222"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token function">isPasswordEqual</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token property-access">password</span> <span class="token operator">!==</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token string">\'The password you enter the second time is not the same as the one you first filled in.\'</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'The field should be non-empty.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isSubmitting<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>register<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">resetForm</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">SubmitForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token attr-name">scrollToError</span> <span class="token attr-name">onSubmitFail</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onSubmitFail<span class="token punctuation">}</span></span> <span class="token attr-name">onSubmitSuccess</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onSubmitSuccess<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},b.a.createElement(L)),b.a.createElement(X,{title:"Other operation of form",id:"Demootheroperation",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Button</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SubmitForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> zentForm</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">setError</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token method function property-access">setFieldExternalErrors</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'The name can only be letters.\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">initialize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token method function property-access">initialize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'0\'</span><span class="token punctuation">,</span>\n      age<span class="token operator">:</span> <span class="token string">\'0\'</span><span class="token punctuation">,</span>\n      password<span class="token operator">:</span> <span class="token string">\'0\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">setFieldsValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token method function property-access">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'3\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">reset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token method function property-access">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit<span class="token punctuation">,</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> isSubmitting <span class="token operator">=</span> zentForm<span class="token punctuation">.</span><span class="token method function property-access">isSubmitting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'The name should be non-empty.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'The age should be non-empty.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'The password should be non-empty.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token operator">&lt;</span><span class="token maybe-class-name">FormInputField</span>\n          name<span class="token operator">=</span><span class="token string">"confirmPassword"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"Comfirm password:"</span>\n          value<span class="token operator">=</span><span class="token string">"1"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token function">isPasswordEqual</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token property-access">password</span> <span class="token operator">!==</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token string">\'The password you enter the second time is not the same as the one you first filled in.\'</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'The field should be non-empty.\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isSubmitting<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">initialize</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>initialize<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">setFieldsValue</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token keyword">set</span> value<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">reset</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">SubmitForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},b.a.createElement(H)),b.a.createElement(K,{html:'<h3 class="anchor-heading"><a href="#others">¶</a><a href="javascript:void(0)" id="others" class="anchor-point"></a>Others</h3>\n<h4 class="anchor-heading"><a href="#form-layouts">¶</a><a href="javascript:void(0)" id="form-layouts" class="anchor-point"></a><code>Form</code> layouts</h4>\n<p><code>Form</code> provides three kind of layouts: <code>inline</code>，<code>horizontal</code>， <code>vertical</code>.</p>'}),b.a.createElement(X,{title:"Three layout of form",id:"Demolayout",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Radio</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">RadioGroup</span> <span class="token operator">=</span> <span class="token maybe-class-name">Radio</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">Group</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    formLayout<span class="token operator">:</span> <span class="token string">\'vertical\'</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onRadioChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      formLayout<span class="token operator">:</span> e<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">.</span><span class="token property-access">value</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> zentForm</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> formLayout <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RadioGroup</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formLayout<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onRadioChange</span><span class="token punctuation">}</span></span>  <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-layout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>vertical<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>horizontal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>inline<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RadioGroup</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">inline</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formLayout <span class="token operator">===</span> <span class="token string">\'inline\'</span><span class="token punctuation">}</span></span> <span class="token attr-name">horizontal</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formLayout <span class="token operator">===</span> <span class="token string">\'horizontal\'</span><span class="token punctuation">}</span></span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n            <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name:<span class="token punctuation">"</span></span>\n            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>\n          <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name2<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n            <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name2:<span class="token punctuation">"</span></span>\n            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>\n          <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FieldForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},b.a.createElement(G)),b.a.createElement(K,{html:'<h4 class="anchor-heading"><a href="#fieldset">¶</a><a href="javascript:void(0)" id="fieldset" class="anchor-point"></a><code>Fieldset</code></h4>'}),b.a.createElement(X,{title:"Fieldset",id:"Demofieldset",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Fieldset</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldsetForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> zentForm</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Fieldset</span></span> <span class="token attr-name">legend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fieldset1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n            <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name:<span class="token punctuation">"</span></span>\n            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>\n          <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Fieldset</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Fieldset</span></span> <span class="token attr-name">legend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fieldset2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name2<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n            <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name2:<span class="token punctuation">"</span></span>\n            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>\n          <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Fieldset</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FieldsetForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},b.a.createElement(Y)),b.a.createElement(K,{html:'<h4 class="anchor-heading"><a href="#formsection">¶</a><a href="javascript:void(0)" id="formsection" class="anchor-point"></a><code>FormSection</code></h4>\n<p>When there are several similar sections of fields in your form, you can use <code>FormSection</code> to reuse these fields. With <code>FormSection</code>, the values of form is a nested object. See more details in <a href="#form-formsection"><code>Form.FormSection</code> API</a>。</p>'}),b.a.createElement(X,{title:"Basic usage of FormSection",id:"Demoformsection",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormSection</span><span class="token punctuation">,</span> <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Address</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>streetName<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Street:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            maxLength<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'The street should be non-empty.\'</span><span class="token punctuation">,</span>\n            maxLength<span class="token operator">:</span> <span class="token string">\'The length of value exceeds the maximum length.\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>House number:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            minLength<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'The house number should be non-empty.\'</span><span class="token punctuation">,</span>\n            minLength<span class="token operator">:</span> <span class="token string">\'The length of value is less than minimum length.\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zipCode<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Zip code:<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">BasicInfo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name:<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Mobile:<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormSection</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Address</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormSection</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldsetForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> zenForm</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">setError</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token method function property-access">setFieldExternalErrors</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      orderNo<span class="token operator">:</span> <span class="token string">\'The order number is wrong.\'</span><span class="token punctuation">,</span>\n      buyer<span class="token operator">:</span> <span class="token punctuation">{</span>\n        mobile<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'The mobile is wrong.\'</span><span class="token punctuation">,</span> <span class="token string">\'test\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      recipient<span class="token operator">:</span> <span class="token punctuation">{</span>\n        address<span class="token operator">:</span> <span class="token punctuation">{</span>\n          zipCode<span class="token operator">:</span> <span class="token string">\'The format of the zip code is incorrect.\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        mobile<span class="token operator">:</span> <span class="token string">\'The mobile needs to be refilled.\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">initialize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token method function property-access">initialize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      orderNo<span class="token operator">:</span> <span class="token string">\'E1111111\'</span><span class="token punctuation">,</span>\n      buyer<span class="token operator">:</span> <span class="token punctuation">{</span>\n        mobile<span class="token operator">:</span> <span class="token number">13423532345</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Allen\'</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token punctuation">{</span>\n          number<span class="token operator">:</span> <span class="token number">14234</span><span class="token punctuation">,</span>\n          zipCode<span class="token operator">:</span> <span class="token number">2222</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      recipient<span class="token operator">:</span> <span class="token punctuation">{</span>\n        mobile<span class="token operator">:</span> <span class="token number">13245343533</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Selina\'</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token punctuation">{</span>\n          number<span class="token operator">:</span> <span class="token number">14234</span><span class="token punctuation">,</span>\n          zipCode<span class="token operator">:</span> <span class="token number">2222</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">setFieldsValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token method function property-access">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      orderNo<span class="token operator">:</span> <span class="token string">\'E143423\'</span><span class="token punctuation">,</span>\n      buyer<span class="token operator">:</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">\'Sherldon\'</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token punctuation">{</span>\n          number<span class="token operator">:</span> <span class="token number">1111111</span><span class="token punctuation">,</span>\n          zipCode<span class="token operator">:</span> <span class="token number">11111</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      recipient<span class="token operator">:</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">\'Leonard\'</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token punctuation">{</span>\n          number<span class="token operator">:</span> <span class="token number">11111</span><span class="token punctuation">,</span>\n          zipCode<span class="token operator">:</span> <span class="token number">1111</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">reset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token method function property-access">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>orderNo<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Order Number:<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormSection</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buyer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sec-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token maybe-class-name">Buyer</span> <span class="token maybe-class-name">Info</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicInfo</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormSection</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormSection</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>recipient<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sec-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token maybe-class-name">Recipient</span> <span class="token maybe-class-name">Info</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicInfo</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormSection</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            submit\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">setError</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token keyword">set</span> extra errors\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">initialize</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            initialize\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">setFieldsValue</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token keyword">set</span> value\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">reset</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            reset\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FieldsetForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},b.a.createElement($)),b.a.createElement(K,{html:'<h4 class="anchor-heading"><a href="#fieldarray">¶</a><a href="javascript:void(0)" id="fieldarray" class="anchor-point"></a><code>FieldArray</code></h4>\n<p><code>FieldArray</code> helps to render an array of identical fields. You can add and delete the cell fields in the array, similary to the addition and deletion of elements in an array.</p>\n<p><code>FieldArray</code> injects the <code>fields</code> property for its <code>component</code>, which provides the traversal, addition, deletion and other operations of cell fields. See more details in <a href="#form-fieldarray"><code>Form.FieldArray</code> API</a>。</p>'}),b.a.createElement(X,{title:"Basic usage of FieldArray",id:"Demofieldarray",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Icon</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Pop</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Form</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'@zent/compat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  <span class="token maybe-class-name">Field</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormInputField</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormRadioGroupField</span><span class="token punctuation">,</span>\n  createForm<span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FormSection</span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">FieldArray</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Hobbies</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> fields <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> fields<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token maybe-class-name">Add</span> hobby\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fields<span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">hobby<span class="token punctuation">,</span> index<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">hobby</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n                <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hobby<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n                <span class="token attr-name">label</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Hobby</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'Please enter the hobby.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n              <span class="token punctuation">/></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>del-btn<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> fields<span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                <span class="token maybe-class-name">Delete</span> hobby\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MemberInfo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> fields<span class="token punctuation">,</span> index <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>members<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>member-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n            <span class="token maybe-class-name">Member</span>\n            <span class="token punctuation">{</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Pop</span></span> <span class="token attr-name">centerArrow</span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Delete member<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>del-btn<span class="token punctuation">"</span></span>\n              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close-circle<span class="token punctuation">"</span></span>\n              <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> fields<span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Pop</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'Please enter the name of member.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormRadioGroupField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Sex:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token function">required</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> value <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token string">\'Please select the sex of member.\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>male<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>female<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormRadioGroupField</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FieldArray</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token maybe-class-name">Hobbies</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Members</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">addOne</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">fields</span><span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">addTwo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">fields</span><span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'john\'</span><span class="token punctuation">,</span>\n      sex<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n      hobbies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'H1\'</span><span class="token punctuation">,</span> <span class="token string">\'h4\'</span><span class="token punctuation">,</span> <span class="token string">\'h6\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">fields</span><span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> fields <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fields<span class="token punctuation">.</span><span class="token property-access">length</span> <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">addOne</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token maybe-class-name">Add</span> one member\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token punctuation">{</span>fields<span class="token punctuation">.</span><span class="token property-access">length</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">addTwo</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token maybe-class-name">Add</span> two members\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token punctuation">{</span>fields<span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">member<span class="token punctuation">,</span> index<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormSection</span></span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>member<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">member</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MemberInfo</span></span> <span class="token attr-name">fields</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fields<span class="token punctuation">}</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormSection</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">zentForm</span><span class="token punctuation">.</span><span class="token method function property-access">initialize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      number<span class="token operator">:</span> <span class="token number">233</span><span class="token punctuation">,</span>\n      members<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          name<span class="token operator">:</span> <span class="token string">\'john\'</span><span class="token punctuation">,</span>\n          sex<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n          hobbies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'HH2\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">values<span class="token punctuation">,</span> zenForm</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">setArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">zentForm</span><span class="token punctuation">.</span><span class="token method function property-access">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      number<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n      members<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          name<span class="token operator">:</span> <span class="token string">\'john\'</span><span class="token punctuation">,</span>\n          sex<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n          hobbies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'H1\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>\n        <span class="token attr-name">horizontal</span>\n        <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">submit</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-form<span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormInputField</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Total number:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n          <span class="token attr-name">validations</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">validationErrors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token string">\'Please enter the total number of the family.\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FieldArray</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>members<span class="token punctuation">"</span></span>\n          <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token maybe-class-name">Members</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            submit\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">setArray</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token known-class-name class-name">Set</span> <span class="token maybe-class-name">FieldArray</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">WrappedForm</span> <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token maybe-class-name">FieldForm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},b.a.createElement(J)),b.a.createElement(K,{html:'<h3 class="anchor-heading"><a href="#the-internal-realization-of-fo">¶</a><a href="javascript:void(0)" id="the-internal-realization-of-fo" class="anchor-point"></a>The internal realization of form</h3>\n<p>The core components of form are as follows:</p>\n<ul>\n<li>The <code>createForm</code> function: It is used to build a higher-order component which maintains an instance of all the form elements (the<code>Field</code> component) in the form. The subcomponent will get various methods of manipulating form and form elements by injecting <code>zentForm</code> into the subcomponents through <code>props</code>.</li>\n<li>The <code>Form</code> component: As the toppest skeleton of the entire form, <code>Form</code> is a simple package of the <code>&#x3C;form></code> tag. The <code>Form</code> also defines the default class which provides base style.</li>\n<li>The <code>Field</code> component: It is a higher-order component which packages various fields, such as <code>Input</code>, <code>Checkbox</code>, <code>Select</code> and various custom components. The component will maintains the value and validation error of the field. The <code>Field</code> component also passes the encapsulated callback function of <code>onChange</code>, <code>onBlur</code> and the properties that are required by fields to form element components, such as <code>value</code>, <code>error</code> and so on.</li>\n</ul>\n<p>See more details in <a href="#api">API</a>.</p>\n<h3 class="anchor-heading"><a href="#other-instructions">¶</a><a href="javascript:void(0)" id="other-instructions" class="anchor-point"></a>Other instructions</h3>\n<h4 class="anchor-heading"><a href="#package-custom-fields">¶</a><a href="javascript:void(0)" id="package-custom-fields" class="anchor-point"></a>Package custom fields</h4>\n<ul>\n<li>\n<p>The display of <code>Field</code> is entirely controlled by the <code>component</code> property which is passed into the component. This component can receive all the properties which are passed in from <code>Field</code> (including some implicit properties constructed in <code>Field</code>, which is described in detail in <a href="#form-field"><code>Form.Field</code> API</a>.</p>\n</li>\n<li>\n<p>For some popular form components in <code>zent</code>, the <code>Form</code> component provides several build-in components through the <code>getControlGroup</code> function. If there are some special requirements in your product design, you can also directly use the <code>getControlGroup</code> to package your own custom field components. See more details in the demo <a href="#package-multiple-elements">Package multiple elements</a>.</p>\n</li>\n<li>\n<p><strong>If you need to display multiple form elements in a single <code>Field</code>, you can use an object which is consists of all these values and pass it into the <code>Field</code> as the property <code>value</code>. See more details in the demo <a href="#package-multiple-elements">Package multiple elements</a>.</strong></p>\n</li>\n</ul>\n<h4 class="anchor-heading"><a href="#the-life-circle-of-value-in-fi">¶</a><a href="javascript:void(0)" id="the-life-circle-of-value-in-fi" class="anchor-point"></a>The life-circle of <code>value</code> in <code>Field</code></h4>\n<ul>\n<li>The initial value of the <code>Field</code> needs to be passed in by specifying <code>value</code>. The life-circle of <code>value</code> is shown below:</li>\n</ul>\n<pre><code class="language-text">pass value into <span class="token maybe-class-name">Field</span> <span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span> format the value using <span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span> use the value after fomatting to render\n                               ↑                                     <span class="token operator">|</span>\n                               <span class="token operator">|</span>                                     ↓\n                               <span class="token operator">|</span>                      <span class="token maybe-class-name">The</span> user changes the value by operationZ\n                               <span class="token operator">|</span>                                     <span class="token operator">|</span>\n                               <span class="token operator">|</span>                                     ↓\n    pass the value after normalizing to form <span class="token keyword">for</span> sumitting <span class="token operator">&#x3C;</span><span class="token operator">--</span><span class="token operator">-</span> format the value using <span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>\n<ul>\n<li>If the <code>value</code> passed into the <code>Field</code> is a dynamic value, the life-cicle will restart after the value is changed externally.</li>\n</ul>\n<h3 class="anchor-heading"><a href="#api">¶</a><a href="javascript:void(0)" id="api" class="anchor-point"></a>API</h3>\n<h4 class="anchor-heading"><a href="#form">¶</a><a href="javascript:void(0)" id="form" class="anchor-point"></a><strong><code>Form</code></strong></h4>\n<p><code>Form</code> is a simple package of the <code>form</code> tag. It provides a default class name.</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>The custom class name</td>\n<td>string</td>\n<td><code>\'\'</code></td>\n<td>no</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>The custom prefix</td>\n<td>string</td>\n<td><code>\'zent\'</code></td>\n<td>no</td>\n</tr>\n<tr>\n<td>vertical</td>\n<td>Whether to use the vertical layout</td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>no</td>\n</tr>\n<tr>\n<td>horizontal</td>\n<td>Whether to use the horizontal layout</td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>no</td>\n</tr>\n<tr>\n<td>inline</td>\n<td>Whether to use the inline layout</td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>no</td>\n</tr>\n<tr>\n<td>onSubmit</td>\n<td>The callback function that is triggered when the form is submitted.</td>\n<td>func(e:Event)</td>\n<td><code>noop</code></td>\n<td>no</td>\n</tr>\n<tr>\n<td>style</td>\n<td>The style of form</td>\n<td>object</td>\n<td>null</td>\n<td>no</td>\n</tr>\n<tr>\n<td>disableEnterSubmit</td>\n<td>Whether to disable the enter event to submit the form</td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>no</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#form-createform">¶</a><a href="javascript:void(0)" id="form-createform" class="anchor-point"></a><strong><code>Form.createForm</code></strong></h4>\n<h5 class="anchor-heading"><a href="#use-this-function-as-follows-f">¶</a><a href="javascript:void(0)" id="use-this-function-as-follows-f" class="anchor-point"></a><strong>Use this function as follows：<code>Form.createForm(options)(FormComponent)</code></strong></h5>\n<h5 class="anchor-heading"><a href="#options">¶</a><a href="javascript:void(0)" id="options" class="anchor-point"></a><strong><code>options</code></strong></h5>\n<p><code>options</code> supports the following configuartion items:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>formValidations</td>\n<td>The property is used to add custom validation methods which can be passed extra parameters when used in validations.</td>\n<td>object</td>\n<td>no</td>\n</tr>\n</tbody>\n</table>\n<p>⚠️Ps: The interal validations in projects can be introduced by defining a common <code>formValidations</code> object in a file.</p>\n<h5 class="anchor-heading"><a href="#createform-returns-props-that">¶</a><a href="javascript:void(0)" id="createform-returns-props-that" class="anchor-point"></a><strong><code>createForm</code> returns <code>props</code> that can be received in the component</strong></h5>\n<p>The <code>createForm</code> method builds a higher-order component that defines some additional <code>props</code>.</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onChange</td>\n<td>The callback function that is triggered when any fields in the form. The parameter of this function is the object of all the values of fields.</td>\n<td>func(values: Object)</td>\n<td>noop</td>\n<td>no</td>\n</tr>\n<tr>\n<td>onSubmitSuccess</td>\n<td>The callback function that is triggered when the form submission is successful. The parameter of this function is the return result of the promise in submit function.</td>\n<td>func(submitResult: any)</td>\n<td>noop</td>\n<td>no</td>\n</tr>\n<tr>\n<td>onSubmitFail</td>\n<td>The callback function that is triggered when the form submission is failed. The parameter of this function is an instance of \n<code>SubmissionError</code>\n or any error thrown during submit.</td>\n<td>func(submitError: SubmissionError</td>\n<td>Error)</td>\n<td>noop</td>\n</tr>\n<tr>\n<td>scrollToError</td>\n<td>The form automatically scrolls to the first field with error when the form is submitting or extra error is setting.</td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>no</td>\n</tr>\n</tbody>\n</table>\n<p>⚠️Ps:</p>\n<ol>\n<li>It is supported to set <code>onChange</code>, <code>onSubmitSuccess</code>, <code>onSubmitFail</code>, <code>scrollToError</code> through the parameter <code>options</code> of <code>createForm</code>;</li>\n<li>To get an instance of a the form component which is wrapped by <code>createForm</code>, you can add a ref on the component created by <code>createForm</code> and then call the <code>getWrappedForm</code> method.</li>\n</ol>\n<h5 class="anchor-heading"><a href="#zentform">¶</a><a href="javascript:void(0)" id="zentform" class="anchor-point"></a><strong><code>zentForm</code></strong></h5>\n<p>The components packaged via <code>Form.createForm</code> will be added with the <code>zenForm</code> property in its <code>props</code>. You can accesss <code>zentForm</code> via <code>this.props.zentForm</code>. APIs provided by <code>zentForm</code> are as follows:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getFormValues</td>\n<td>The function to get all the field\'s values in the form</td>\n<td>func</td>\n</tr>\n<tr>\n<td>getFieldError</td>\n<td>The function to get the error messages of the specified field, which will return null when there is no error.</td>\n<td>func(name: String)</td>\n</tr>\n<tr>\n<td>setFormDirty</td>\n<td>The function to set all the fields to be non-native state, which helps to display all the unshown errors when submitting the form</td>\n<td>func(isDirty: Boolean)</td>\n</tr>\n<tr>\n<td>setFieldExternalErrors</td>\n<td>The function to set external error messages, such as the validation error from the server. The parameter \n<code>error</code>\n of this function is an object with keys being the names of fields and values being the corresponding error messages.</td>\n<td><code>(errors: object, updateDirty = true) => void</code></td>\n</tr>\n<tr>\n<td>setFieldsValue</td>\n<td>The function to specify the value of a certain field.</td>\n<td>func(data: Object)</td>\n</tr>\n<tr>\n<td>resetFieldsValue</td>\n<td>The funtion to set all the values of all the fields as the initial values or the specified values.</td>\n<td>func(data: Object)</td>\n</tr>\n<tr>\n<td>initialize</td>\n<td>The funtion to set the initial values of the form.</td>\n<td>func(data: Object)</td>\n</tr>\n<tr>\n<td>isValid</td>\n<td>The function to get the state whether all of the form fields have been validated.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>isSubmitting</td>\n<td>The function to get the state whether the form is sumitting.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>isValidating</td>\n<td>The function to get the state whether the form is in asynchronous validation.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>isFieldDirty</td>\n<td>The function to get the state whether the field has been changed.</td>\n<td>func(name: String)</td>\n</tr>\n<tr>\n<td>isFieldValidating</td>\n<td>The function to get the state whether the field is in asynchronous validation.</td>\n<td>func(name: String)</td>\n</tr>\n<tr>\n<td>isFormAsyncValidated</td>\n<td>The function to get the state whether all of the fields has been asynchronous validated.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>validateForm</td>\n<td>The function to validate the form.</td>\n<td>func(forceValidate: Boolean, callback: Function, relatedFields: Array)</td>\n</tr>\n<tr>\n<td>asyncValidateForm</td>\n<td>The function to asynchronous validate the form.</td>\n<td>func(resolve: Function, reject: Function)</td>\n</tr>\n<tr>\n<td>isFormSubmitFail</td>\n<td>The function to get the status whether the submission of the form failed. It is \n<code>false</code>\n when the form is in initial status.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>isFormSubmitSuccess</td>\n<td>The function to get the status whether the submission of the form is successful. It is \n<code>false</code>\n when the form is in initial status.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>updateFormSubmitStatus</td>\n<td>The function to update the status of the form\'s submission.</td>\n<td>func(submitSuccess: Boolean)</td>\n</tr>\n</tbody>\n</table>\n<h5 class="anchor-heading"><a href="#handlesubmit">¶</a><a href="javascript:void(0)" id="handlesubmit" class="anchor-point"></a><strong><code>handleSubmit</code></strong></h5>\n<p><code>createForm</code> also provides an encapsulated <code>handleSubmit</code> method for the wrapped components. For more information, see the demo <a href="#the-operations-of-form">The operations of form</a>.</p>\n<p>⚠️Ps: If you want to correctly receive the <code>error</code> object in the callback function <code>onSubmitFail</code>, you need to throw a <code>SubmissionError</code> object in the <code>submit</code> function.</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token known-class-name class-name">SubmissionError</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">Form</span><span class="token punctuation">;</span>\n\n<span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// do submit</span>\n  <span class="token spread operator">...</span>\n  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SubmissionError</span><span class="token punctuation">(</span><span class="token string">\'error message\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">onSubmissionFail</span><span class="token punctuation">(</span><span class="token parameter">submissionError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>submissionError <span class="token operator">&#x26;&#x26;</span> submissionError<span class="token punctuation">.</span><span class="token property-access">errors</span> <span class="token operator">===</span> <span class="token string">\'error message\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<h4 class="anchor-heading"><a href="#form-field">¶</a><a href="javascript:void(0)" id="form-field" class="anchor-point"></a><strong><code>Form.Field</code></strong></h4>\n<p>All the field components that need to maintain <code>value</code> need to be wrapped by the <code>Field</code> component.\nThe following <code>props</code> will be passed into the <code>Field</code> component. All the <code>props</code> expect for <code>component</code> (including the custom <code>props</code>) will be passed to the field component defined in <code>component</code>:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>The name of the field</td>\n<td>string</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>component</td>\n<td>The real component of the field which will determine how the field is displayed. The value of this property can be string (standard html tag name) or React node.</td>\n<td>string / React.Component</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>value</td>\n<td>The initial value of the field</td>\n<td>any</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>normalize</td>\n<td>The normalization function of value when the field is changed or on blur.</td>\n<td>func(value, previousValue, nextValues, previousValues)</td>\n<td>no</td>\n</tr>\n<tr>\n<td>format</td>\n<td>The format function of value before the field\'s rendering which will not affect the value stored in the form.</td>\n<td>func(value, previousValue, nextValues, previousValues)</td>\n<td>no</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>The callback function that is triggered when the field\'s value is changed. This function is encapsulated in \n<code>Field</code>\n so that the custom field components should call \n<code>props.onChange()</code>\n function by yourself.</td>\n<td>func(event, newValue, previousValue, preventSetValue)</td>\n<td>no</td>\n</tr>\n<tr>\n<td>onBlur</td>\n<td>The callback function that is triggered when the field is on blur. This function is encapsulated in \n<code>Field</code>\n.</td>\n<td>func(event, newValue, previousValue, preventSetValue)</td>\n<td>no</td>\n</tr>\n<tr>\n<td>onFocus</td>\n<td>The callback function that is triggered when the field is on focus. This function is encapsulated in \n<code>Field</code>\n.</td>\n<td>func(event)</td>\n<td>no</td>\n</tr>\n<tr>\n<td>validations</td>\n<td>The validations of the field.</td>\n<td>object</td>\n<td>no</td>\n</tr>\n<tr>\n<td>validationErrors</td>\n<td>The error massages of the validations.</td>\n<td>object</td>\n<td>no</td>\n</tr>\n<tr>\n<td>validateOnChange</td>\n<td>Whether to trigger the field\'s validations when the field is changed.</td>\n<td>boolean</td>\n<td>no</td>\n</tr>\n<tr>\n<td>validateOnBlur</td>\n<td>Whether to trigger the field\'s validations when the field is on blur.</td>\n<td>boolean</td>\n<td>no</td>\n</tr>\n<tr>\n<td>clearErrorOnFocus</td>\n<td>Whether to clear the error messages when the field in on focus.</td>\n<td>boolean</td>\n<td>no</td>\n</tr>\n<tr>\n<td>asyncValidation</td>\n<td>The asynchronous validations which should return a Promise object.</td>\n<td>func(values, value)</td>\n<td>no</td>\n</tr>\n<tr>\n<td>displayError</td>\n<td>Whether to display the error message</td>\n<td>boolean</td>\n<td>no</td>\n</tr>\n<tr>\n<td>relatedFields</td>\n<td>The fields should be validated when current field is validated.</td>\n<td>array</td>\n<td>no</td>\n</tr>\n</tbody>\n</table>\n<p>In addition to the above parameters, the <code>Field</code> component implicitly passes the following props to the wrapped field component:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>isDirty</td>\n<td>Whether the field is changed.</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>isActive</td>\n<td>Whethe the field is input and has been on focus</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>error</td>\n<td>The first error message of the field. It is null when there is no error.</td>\n<td>string / Null</td>\n</tr>\n<tr>\n<td>errors</td>\n<td>The array of the error messages. It is an empty array when there is no error.</td>\n<td>array</td>\n</tr>\n</tbody>\n</table>\n<h5 class="anchor-heading"><a href="#get-the-instance-of-component">¶</a><a href="javascript:void(0)" id="get-the-instance-of-component" class="anchor-point"></a><strong>Get the instance of component in <code>Field</code></strong></h5>\n<p>You can get the instance of the field component through adding a ref in <code>Field</code> and calling the <code>getWrappedComponent</code> function.</p>\n<pre><code class="language-text"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span><span class="token class-name">Field</span></span>\n  <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">ref</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">field</span> <span class="token operator">=</span> ref <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token maybe-class-name">XxxComponent</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">...</span>\n<span class="token punctuation">/></span></span>\n\n<span class="token keyword">const</span> component <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token method function property-access">getWrappedComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h4 class="anchor-heading"><a href="#form-getcontrolgroup">¶</a><a href="javascript:void(0)" id="form-getcontrolgroup" class="anchor-point"></a><strong><code>Form.getControlGroup</code></strong></h4>\n<p><code>getControlGroup</code> is a function that is used to quickly wrap a custom component. It returns a stateless functional component that satisfies common layout and style requirements (left label, right form element). At the same time, it supports to display the field\'s error message.</p>\n<p>The packaged components support the following properties which can be pass from <code>Field</code>:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>label</td>\n<td>The label of the field</td>\n<td>string / React.Component</td>\n<td>no</td>\n</tr>\n<tr>\n<td>className</td>\n<td>The extra class name which will be added to the control-group and will override the style of the child component.</td>\n<td>string</td>\n<td>no</td>\n</tr>\n<tr>\n<td>helpDesc</td>\n<td>The help description of the field.</td>\n<td>string / React.Component</td>\n<td>no</td>\n</tr>\n<tr>\n<td>notice</td>\n<td>The import notice of the field.</td>\n<td>string / React.Component</td>\n<td>no</td>\n</tr>\n<tr>\n<td>required</td>\n<td>Show a red asterisk before the label when this propoerty is true.</td>\n<td>boolean</td>\n<td>no</td>\n</tr>\n</tbody>\n</table>\n<h5 class="anchor-heading"><a href="#get-the-instance-of-control">¶</a><a href="javascript:void(0)" id="get-the-instance-of-control" class="anchor-point"></a><strong>Get the instance of <code>Control</code></strong></h5>\n<p>Similar to getting the instance of the component of <code>Field</code> above, you can call the <code>getControlInstance</code> method.</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> component <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token method function property-access">getWrappedComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">getControlInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h4 class="anchor-heading"><a href="#form-formsection">¶</a><a href="javascript:void(0)" id="form-formsection" class="anchor-point"></a><strong><code>Form.FormSection</code></strong></h4>\n<p><code>FormSection</code> provides the following properties:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>The name of \n<code>FormSection</code></td>\n<td>string</td>\n<td>null</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>component</td>\n<td>The html tag which wrapped the form section</td>\n<td>string</td>\n<td><code>\'div\'</code></td>\n<td>no</td>\n</tr>\n<tr>\n<td>children</td>\n<td>The children of \n<code>FormSection</code></td>\n<td>string / React.Component</td>\n<td>null</td>\n<td>no</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#form-fieldarray">¶</a><a href="javascript:void(0)" id="form-fieldarray" class="anchor-point"></a><strong><code>Form.FieldArray</code></strong></h4>\n<p><code>FieldArray</code> provides the following properties:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>The name of \n<code>FieldArray</code></td>\n<td>string</td>\n<td>Yes</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td><code>FieldArray</code>\n value</td>\n<td>array</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>component</td>\n<td>The real component of the \n<code>FieldArray</code>\n which will determine how the \n<code>FieldArray</code>\n is displayed. The value of this property can be string (standard html tag name) or React node.</td>\n<td>string / React.Component</td>\n<td>Yes</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>FieldArray</code> will inject the <code>fields</code> property for the <code>component</code>, which provides the traversal, addition, deletion and other operations of field array. APIs provided by <code>fields</code> are as follows:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>The name of \n<code>FieldArray</code></td>\n<td>string</td>\n</tr>\n<tr>\n<td>length</td>\n<td>The length of the field array</td>\n<td>number</td>\n</tr>\n<tr>\n<td>forEach</td>\n<td>The traversal function of the field array</td>\n<td>(callback: Function) => any</td>\n</tr>\n<tr>\n<td>get</td>\n<td>The function to get the value of last item in the field array</td>\n<td>(index: Number) => any</td>\n</tr>\n<tr>\n<td>getAll</td>\n<td>The function to get all the values of the field array.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>map</td>\n<td>The function to map the field array.</td>\n<td>(callback: Function) => any</td>\n</tr>\n<tr>\n<td>move</td>\n<td>The function to move the curtain item in the field array.</td>\n<td>(fromPos: Number, toPos: Number) => any</td>\n</tr>\n<tr>\n<td>pop</td>\n<td>The function to remove the last item of the field array.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>push</td>\n<td>The function to add one item at the end of the field array.</td>\n<td>(value: Object/String) => any</td>\n</tr>\n<tr>\n<td>remove</td>\n<td>The function to remove the curtain item of the field array.</td>\n<td>(index: Number) => any</td>\n</tr>\n<tr>\n<td>removeAll</td>\n<td>The function to remove all the item of the field array.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>shift</td>\n<td>The function to remove the first item of the field array.</td>\n<td>func</td>\n</tr>\n<tr>\n<td>swap</td>\n<td>The function to swap two items of the field array.</td>\n<td>(indexA: Number, indexB: Number) => any</td>\n</tr>\n<tr>\n<td>unshift</td>\n<td>The function to add one item to the head of the field array.</td>\n<td>(value: Object/String) => any</td>\n</tr>\n<tr>\n<td>concat</td>\n<td>The function to concat another array at the end of the field array. If the passed in value is not an array, it will be pushed to the end of the field array</td>\n<td>(value: Object/String/Array) => any</td>\n</tr>\n<tr>\n<td>replaceAll</td>\n<td>Replace all field array with the new one</td>\n<td>(value: Array) => any</td>\n</tr>\n</tbody>\n</table>\n<p>⚠️Ps: The callback function of <code>forEach</code> and <code>map</code> will receive five paramters: item(the name of the current item in the field array), index(the index of the current item in the field array), key(the unique key of the current item in the field array), value(the value of the current item in the field array), fieldsValue(the values of the field array). In order to ensure that the data of FieldArray is correct when deleted and added, you should set the correct <code>name</code> and<code>key</code> of the child nodes in <code>component</code> when traversing. The usage of <code>FieldArray</code> is in the demo <a href="#fieldarray">The basic usage of FieldArray</a>.</p>\n<h4 class="anchor-heading"><a href="#built-in-validation-rules">¶</a><a href="javascript:void(0)" id="built-in-validation-rules" class="anchor-point"></a><strong>Built-in validation rules</strong></h4>\n<p>You can use it directly in the <code>validations</code> property of <code>Field</code>. See more details in the demo <a href="#the-usage-of-form-validations">The usage of form validations</a>. The built-in rules are as follows:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Required</th>\n<th>Parameters</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>required</td>\n<td>Whether the value is required.</td>\n<td>Any. Passing \n<code>true</code>\n or any other value means this rule in effect. This instructions apply to all the following rules.</td>\n</tr>\n<tr>\n<td>isExisty</td>\n<td>Whether the value is not \n<code>null</code>\n or not \n<code>undefined</code>\n.</td>\n<td>Any</td>\n</tr>\n<tr>\n<td>matchRegex</td>\n<td>Whether the value matches the regular expression.</td>\n<td>Regex</td>\n</tr>\n<tr>\n<td>isEmail</td>\n<td>Whether the value is an email.</td>\n<td>Any</td>\n</tr>\n<tr>\n<td>isUrl</td>\n<td>Whether the value is a website link.</td>\n<td>Any</td>\n</tr>\n<tr>\n<td>isTrue</td>\n<td>Whether the value is \n<code>true</code>\n.</td>\n<td>Any</td>\n</tr>\n<tr>\n<td>isFalse</td>\n<td>Whether the value is \n<code>false</code></td>\n<td>Any</td>\n</tr>\n<tr>\n<td>isNumeric</td>\n<td>Whether the value is a numeric type.</td>\n<td>Any</td>\n</tr>\n<tr>\n<td>isInt</td>\n<td>Whether the value is a integer type.</td>\n<td>Any</td>\n</tr>\n<tr>\n<td>isFloat</td>\n<td>Whether the value is a decimal type.</td>\n<td>Any</td>\n</tr>\n<tr>\n<td>isLength</td>\n<td>Whether the length of the strging of the array is the specified length.</td>\n<td>The value of length(Number)</td>\n</tr>\n<tr>\n<td>equals</td>\n<td>Whether the value is equal to the specified value</td>\n<td>specified value</td>\n</tr>\n<tr>\n<td>equalsField</td>\n<td>Whether the value is equal to the value of other field</td>\n<td>The name of other field(String)</td>\n</tr>\n<tr>\n<td>maxLength</td>\n<td>The maximum length of the string or the array</td>\n<td>The value of length(Number)</td>\n</tr>\n<tr>\n<td>minLength</td>\n<td>The minimum length of the string or the array</td>\n<td>The value of length(Number)</td>\n</tr>\n</tbody>\n</table>'}))}}]),a}(v.Component)}}]);